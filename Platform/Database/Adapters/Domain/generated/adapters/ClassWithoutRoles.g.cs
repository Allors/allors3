// Allors generated file.
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class ClassWithoutRoles : Allors.IObject 
	{
		private readonly IStrategy strategy;
		private readonly Allors.Meta.M m;

		public ClassWithoutRoles(Allors.IStrategy strategy)
		{
			this.strategy = strategy;
			this.m = this.DatabaseState().M;
		}

		public Allors.Meta.M M => m;

		public Allors.Meta.MetaClassWithoutRoles Meta => m.ClassWithoutRoles;

		public long Id
		{
			get { return this.strategy.ObjectId; }
		}

		public IStrategy Strategy
        {
            [System.Diagnostics.DebuggerStepThrough]
            get { return this.strategy; }
        }

		public static ClassWithoutRoles Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (ClassWithoutRoles) allorsSession.Instantiate(allorsObjectId);
		}

		public override bool Equals(object obj)
        {
            var typedObj = obj as IObject;
            return typedObj != null &&
                   typedObj.Strategy.ObjectId.Equals(this.Strategy.ObjectId) &&
                   typedObj.Strategy.Session.Database.Id.Equals(this.Strategy.Session.Database.Id);
        }

		public override int GetHashCode()
        {
            return this.Strategy.ObjectId.GetHashCode();
        }


        #region Test Helpers
        public static ClassWithoutRoles Create(ISession session) => (ClassWithoutRoles)session.Create(session.Database.State().M.ClassWithoutRoles.ObjectType);

        public static ClassWithoutRoles[] Create(ISession session, int count) => (ClassWithoutRoles[])session.Create(session.Database.State().M.ClassWithoutRoles.ObjectType, count);

        public static ClassWithoutRoles Instantiate(ISession session, long id) => (ClassWithoutRoles)session.Instantiate(id);

        public static ClassWithoutRoles[] Instantiate(ISession session, string[] ids) => (ClassWithoutRoles[])session.Instantiate(ids);

        public static ClassWithoutRoles[] Extent(ISession session) => (ClassWithoutRoles[])session.Extent(session.Database.State().M.ClassWithoutRoles.ObjectType).ToArray();
        #endregion
	}
}