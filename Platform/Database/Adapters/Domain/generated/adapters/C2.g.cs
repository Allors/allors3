// Allors generated file.
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class C2 : Allors.IObject , I2, I23, I12
	{
		private readonly IStrategy strategy;
		private readonly Allors.Meta.M m;

		public C2(Allors.IStrategy strategy)
		{
			this.strategy = strategy;
			this.m = this.DatabaseState().M;
		}

		public Allors.Meta.M M => m;

		public Allors.Meta.MetaC2 Meta => m.C2;

		public long Id
		{
			get { return this.strategy.ObjectId; }
		}

		public IStrategy Strategy
        {
            [System.Diagnostics.DebuggerStepThrough]
            get { return this.strategy; }
        }

		public static C2 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (C2) allorsSession.Instantiate(allorsObjectId);
		}

		public override bool Equals(object obj)
        {
            var typedObj = obj as IObject;
            return typedObj != null &&
                   typedObj.Strategy.ObjectId.Equals(this.Strategy.ObjectId) &&
                   typedObj.Strategy.Session.Database.Id.Equals(this.Strategy.Session.Database.Id);
        }

		public override int GetHashCode()
        {
            return this.Strategy.ObjectId.GetHashCode();
        }



		virtual public global::System.Decimal? C2AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.C2AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistC2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveC2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsDecimal.RelationType);
		}


		virtual public global::Allors.Extent<C1> C1many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1many2manies.RelationType, value);
			}
		}

		virtual public void AddC1many2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.C1many2manies.RelationType, value);
		}

		virtual public void RemoveC1many2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1many2manies.RelationType, value);
		}

		virtual public bool ExistC1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1many2manies.RelationType);
			}
		}

		virtual public void RemoveC1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1many2manies.RelationType);
		}


		virtual public C2 C2C2many2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.C2C2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2C2many2one.RelationType, value);
			}
		}

		virtual public bool ExistC2C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2C2many2one.RelationType);
			}
		}

		virtual public void RemoveC2C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C2C2many2one.RelationType);
		}


		virtual public global::System.Double? C2AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.C2AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistC2AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveC2AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsDouble.RelationType);
		}


		virtual public global::System.Int32? C2AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.C2AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistC2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveC2AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsInteger.RelationType);
		}


		virtual public global::Allors.Extent<C2> C2C2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2C2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2C2many2manies.RelationType, value);
			}
		}

		virtual public void AddC2C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.C2C2many2manies.RelationType, value);
		}

		virtual public void RemoveC2C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2C2many2manies.RelationType, value);
		}

		virtual public bool ExistC2C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2C2many2manies.RelationType);
			}
		}

		virtual public void RemoveC2C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2C2many2manies.RelationType);
		}


		virtual public global::System.Boolean? C2AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.C2AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistC2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveC2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsBoolean.RelationType);
		}


		virtual public C1 C1many2one
		{
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.C1many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1many2one.RelationType, value);
			}
		}

		virtual public bool ExistC1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1many2one.RelationType);
			}
		}

		virtual public void RemoveC1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1many2one.RelationType);
		}


		virtual public C1 C1one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.C1one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1one2one.RelationType, value);
			}
		}

		virtual public bool ExistC1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1one2one.RelationType);
			}
		}

		virtual public void RemoveC1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1one2one.RelationType);
		}


		virtual public global::System.String C2AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.C2AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistC2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsString.RelationType);
			}
		}

		virtual public void RemoveC2AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsString.RelationType);
		}


		virtual public C2 C2C2one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.C2C2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C2C2one2one.RelationType, value);
			}
		}

		virtual public bool ExistC2C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C2C2one2one.RelationType);
			}
		}

		virtual public void RemoveC2C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C2C2one2one.RelationType);
		}


		virtual public global::Allors.Extent<C2> C2C2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C2C2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C2C2one2manies.RelationType, value);
			}
		}

		virtual public void AddC2C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.C2C2one2manies.RelationType, value);
		}

		virtual public void RemoveC2C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C2C2one2manies.RelationType, value);
		}

		virtual public bool ExistC2C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C2C2one2manies.RelationType);
			}
		}

		virtual public void RemoveC2C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C2C2one2manies.RelationType);
		}


		virtual public global::System.DateTime? C2AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.C2AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C2AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistC2AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.C2AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveC2AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.C2AllorsDateTime.RelationType);
		}


		virtual public global::Allors.Extent<C1> C1one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1one2manies.RelationType, value);
			}
		}

		virtual public void AddC1one2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.C1one2manies.RelationType, value);
		}

		virtual public void RemoveC1one2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1one2manies.RelationType, value);
		}

		virtual public bool ExistC1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1one2manies.RelationType);
			}
		}

		virtual public void RemoveC1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1one2manies.RelationType);
		}


		virtual public global::Allors.Extent<C3> C3Many2Manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C3Many2Manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C3Many2Manies.RelationType, value);
			}
		}

		virtual public void AddC3Many2Many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.C3Many2Manies.RelationType, value);
		}

		virtual public void RemoveC3Many2Many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.C3Many2Manies.RelationType, value);
		}

		virtual public bool ExistC3Many2Manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C3Many2Manies.RelationType);
			}
		}

		virtual public void RemoveC3Many2Manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C3Many2Manies.RelationType);
		}


		virtual public C3 C3Many2One
		{
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.C3Many2One.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3Many2One.RelationType, value);
			}
		}

		virtual public bool ExistC3Many2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3Many2One.RelationType);
			}
		}

		virtual public void RemoveC3Many2One()
		{
			Strategy.RemoveCompositeRole(Meta.C3Many2One.RelationType);
		}


		virtual public global::System.Boolean? I2AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.I2AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistI2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveI2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsBoolean.RelationType);
		}


		virtual public global::System.Decimal? I2AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I2AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistI2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveI2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsDecimal.RelationType);
		}


		virtual public global::System.DateTime? I2AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.I2AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistI2AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveI2AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsDateTime.RelationType);
		}


		virtual public global::System.String I2AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I2AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistI2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsString.RelationType);
			}
		}

		virtual public void RemoveI2AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsString.RelationType);
		}


		virtual public global::System.Int32? I2AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I2AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistI2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveI2AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsInteger.RelationType);
		}


		virtual public global::System.Double? I2AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I2AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I2AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistI2AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.I2AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveI2AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.I2AllorsDouble.RelationType);
		}


		virtual public global::System.String Name
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Name.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Name.RelationType, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(Meta.Name.RelationType);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(Meta.Name.RelationType);
		}


		virtual public global::System.Double? S1234AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.S1234AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDouble.RelationType);
		}


		virtual public global::System.Decimal? S1234AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.S1234AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDecimal.RelationType);
		}


		virtual public global::System.Int32? S1234AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.S1234AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsInteger.RelationType);
		}


		virtual public S1234 S1234many2one
		{
			get
			{
				return (S1234) Strategy.GetCompositeRole(Meta.S1234many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234many2one.RelationType, value);
			}
		}

		virtual public bool ExistS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234many2one.RelationType);
			}
		}

		virtual public void RemoveS1234many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234many2one.RelationType);
		}


		virtual public C2 S1234C2one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S1234C2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234C2one2one.RelationType, value);
			}
		}

		virtual public bool ExistS1234C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234C2one2one.RelationType);
			}
		}

		virtual public void RemoveS1234C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2one2one.RelationType);
		}


		virtual public global::Allors.Extent<C2> S1234C2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234C2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234C2many2manies.RelationType, value);
			}
		}

		virtual public void AddS1234C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S1234C2many2manies.RelationType, value);
		}

		virtual public void RemoveS1234C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2many2manies.RelationType, value);
		}

		virtual public bool ExistS1234C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234C2many2manies.RelationType);
			}
		}

		virtual public void RemoveS1234C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234C2many2manies.RelationType);
		}


		virtual public global::Allors.Extent<S1234> S1234one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234one2manies.RelationType, value);
			}
		}

		virtual public void AddS1234one2many (S1234 value)
		{
			Strategy.AddCompositeRole(Meta.S1234one2manies.RelationType, value);
		}

		virtual public void RemoveS1234one2many (S1234 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234one2manies.RelationType, value);
		}

		virtual public bool ExistS1234one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234one2manies.RelationType);
			}
		}

		virtual public void RemoveS1234one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234one2manies.RelationType);
		}


		virtual public global::Allors.Extent<C2> S1234C2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234C2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234C2one2manies.RelationType, value);
			}
		}

		virtual public void AddS1234C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S1234C2one2manies.RelationType, value);
		}

		virtual public void RemoveS1234C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2one2manies.RelationType, value);
		}

		virtual public bool ExistS1234C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234C2one2manies.RelationType);
			}
		}

		virtual public void RemoveS1234C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234C2one2manies.RelationType);
		}


		virtual public global::Allors.Extent<S1234> S1234many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234many2manies.RelationType, value);
			}
		}

		virtual public void AddS1234many2many (S1234 value)
		{
			Strategy.AddCompositeRole(Meta.S1234many2manies.RelationType, value);
		}

		virtual public void RemoveS1234many2many (S1234 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234many2manies.RelationType, value);
		}

		virtual public bool ExistS1234many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234many2manies.RelationType);
			}
		}

		virtual public void RemoveS1234many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234many2manies.RelationType);
		}


		virtual public global::System.String ClassName
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.ClassName.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ClassName.RelationType, value);
			}
		}

		virtual public bool ExistClassName{
			get
			{
				return Strategy.ExistUnitRole(Meta.ClassName.RelationType);
			}
		}

		virtual public void RemoveClassName()
		{
			Strategy.RemoveUnitRole(Meta.ClassName.RelationType);
		}


		virtual public global::System.DateTime? S1234AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.S1234AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDateTime.RelationType);
		}


		virtual public S1234 S1234one2one
		{
			get
			{
				return (S1234) Strategy.GetCompositeRole(Meta.S1234one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234one2one.RelationType, value);
			}
		}

		virtual public bool ExistS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234one2one.RelationType);
			}
		}

		virtual public void RemoveS1234one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234one2one.RelationType);
		}


		virtual public C2 S1234C2many2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S1234C2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234C2many2one.RelationType, value);
			}
		}

		virtual public bool ExistS1234C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234C2many2one.RelationType);
			}
		}

		virtual public void RemoveS1234C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2many2one.RelationType);
		}


		virtual public global::System.String S1234AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S1234AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsString.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsString.RelationType);
		}


		virtual public global::System.Boolean? S1234AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.S1234AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsBoolean.RelationType);
		}


		virtual public global::System.String S2AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S2AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S2AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistS2AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S2AllorsString.RelationType);
			}
		}

		virtual public void RemoveS2AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S2AllorsString.RelationType);
		}


		virtual public global::System.Int32? S2AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.S2AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S2AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistS2AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S2AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveS2AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S2AllorsInteger.RelationType);
		}


		virtual public global::System.Double? S2AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.S2AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S2AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistS2AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.S2AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveS2AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.S2AllorsDouble.RelationType);
		}


		virtual public global::System.Boolean? S2AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.S2AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S2AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistS2AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S2AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveS2AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S2AllorsBoolean.RelationType);
		}


		virtual public global::System.Decimal? S2AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.S2AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S2AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistS2AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S2AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveS2AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S2AllorsDecimal.RelationType);
		}


		virtual public global::System.DateTime? S2AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.S2AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S2AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistS2AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.S2AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveS2AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.S2AllorsDateTime.RelationType);
		}


		virtual public global::System.String I23AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I23AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I23AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistI23AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I23AllorsString.RelationType);
			}
		}

		virtual public void RemoveI23AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I23AllorsString.RelationType);
		}


		virtual public global::System.Boolean? I12AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.I12AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistI12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveI12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsBoolean.RelationType);
		}


		virtual public global::System.Int32? I12AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I12AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistI12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveI12AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsInteger.RelationType);
		}


		virtual public global::Allors.Extent<I34> I12I34one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I34one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I34one2manies.RelationType, value);
			}
		}

		virtual public void AddI12I34one2many (I34 value)
		{
			Strategy.AddCompositeRole(Meta.I12I34one2manies.RelationType, value);
		}

		virtual public void RemoveI12I34one2many (I34 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I34one2manies.RelationType, value);
		}

		virtual public bool ExistI12I34one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I34one2manies.RelationType);
			}
		}

		virtual public void RemoveI12I34one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I34one2manies.RelationType);
		}


		virtual public C3 C3many2one
		{
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.C3many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3many2one.RelationType, value);
			}
		}

		virtual public bool ExistC3many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3many2one.RelationType);
			}
		}

		virtual public void RemoveC3many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C3many2one.RelationType);
		}


		virtual public C2 I12C2many2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I12C2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C2many2one.RelationType, value);
			}
		}

		virtual public bool ExistI12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C2many2one.RelationType);
			}
		}

		virtual public void RemoveI12C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12C2many2one.RelationType);
		}


		virtual public global::System.Double? I12AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I12AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistI12AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveI12AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsDouble.RelationType);
		}


		virtual public I34 I12I34many2one
		{
			get
			{
				return (I34) Strategy.GetCompositeRole(Meta.I12I34many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I34many2one.RelationType, value);
			}
		}

		virtual public bool ExistI12I34many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I34many2one.RelationType);
			}
		}

		virtual public void RemoveI12I34many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12I34many2one.RelationType);
		}


		virtual public global::Allors.Extent<I34> I12I34many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I34many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I34many2manies.RelationType, value);
			}
		}

		virtual public void AddI12I34many2many (I34 value)
		{
			Strategy.AddCompositeRole(Meta.I12I34many2manies.RelationType, value);
		}

		virtual public void RemoveI12I34many2many (I34 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I34many2manies.RelationType, value);
		}

		virtual public bool ExistI12I34many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I34many2manies.RelationType);
			}
		}

		virtual public void RemoveI12I34many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I34many2manies.RelationType);
		}


		virtual public C3 I12C3one2one
		{
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.I12C3one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C3one2one.RelationType, value);
			}
		}

		virtual public bool ExistI12C3one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C3one2one.RelationType);
			}
		}

		virtual public void RemoveI12C3one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12C3one2one.RelationType);
		}


		virtual public global::Allors.Extent<C2> I12C2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C2many2manies.RelationType, value);
			}
		}

		virtual public void AddI12C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I12C2many2manies.RelationType, value);
		}

		virtual public void RemoveI12C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C2many2manies.RelationType, value);
		}

		virtual public bool ExistI12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C2many2manies.RelationType);
			}
		}

		virtual public void RemoveI12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C2many2manies.RelationType);
		}


		virtual public global::System.Decimal? I12AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I12AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistI12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveI12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsDecimal.RelationType);
		}


		virtual public C2 I12C2one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I12C2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C2one2one.RelationType, value);
			}
		}

		virtual public bool ExistI12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C2one2one.RelationType);
			}
		}

		virtual public void RemoveI12C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12C2one2one.RelationType);
		}


		virtual public global::Allors.Extent<C3> I12C3one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C3one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C3one2manies.RelationType, value);
			}
		}

		virtual public void AddI12C3one2many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.I12C3one2manies.RelationType, value);
		}

		virtual public void RemoveI12C3one2many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C3one2manies.RelationType, value);
		}

		virtual public bool ExistI12C3one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C3one2manies.RelationType);
			}
		}

		virtual public void RemoveI12C3one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C3one2manies.RelationType);
		}


		virtual public global::Allors.Extent<C3> I12C3many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C3many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C3many2manies.RelationType, value);
			}
		}

		virtual public void AddI12C3many2many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.I12C3many2manies.RelationType, value);
		}

		virtual public void RemoveI12C3many2many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C3many2manies.RelationType, value);
		}

		virtual public bool ExistI12C3many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C3many2manies.RelationType);
			}
		}

		virtual public void RemoveI12C3many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C3many2manies.RelationType);
		}


		virtual public global::System.String PrefetchTest
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.PrefetchTest.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PrefetchTest.RelationType, value);
			}
		}

		virtual public bool ExistPrefetchTest{
			get
			{
				return Strategy.ExistUnitRole(Meta.PrefetchTest.RelationType);
			}
		}

		virtual public void RemovePrefetchTest()
		{
			Strategy.RemoveUnitRole(Meta.PrefetchTest.RelationType);
		}


		virtual public global::System.DateTime? I12AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.I12AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistI12AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveI12AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsDateTime.RelationType);
		}


		virtual public global::System.String I12AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I12AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistI12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsString.RelationType);
			}
		}

		virtual public void RemoveI12AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsString.RelationType);
		}


		virtual public I34 I12I34one2one
		{
			get
			{
				return (I34) Strategy.GetCompositeRole(Meta.I12I34one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I34one2one.RelationType, value);
			}
		}

		virtual public bool ExistI12I34one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I34one2one.RelationType);
			}
		}

		virtual public void RemoveI12I34one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12I34one2one.RelationType);
		}


		virtual public global::Allors.Extent<C2> I12C2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C2one2manies.RelationType, value);
			}
		}

		virtual public void AddI12C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I12C2one2manies.RelationType, value);
		}

		virtual public void RemoveI12C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C2one2manies.RelationType, value);
		}

		virtual public bool ExistI12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C2one2manies.RelationType);
			}
		}

		virtual public void RemoveI12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C2one2manies.RelationType);
		}


		virtual public global::System.String S12AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S12AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistS12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsString.RelationType);
			}
		}

		virtual public void RemoveS12AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsString.RelationType);
		}


		virtual public global::System.DateTime? S12AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.S12AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistS12AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveS12AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsDateTime.RelationType);
		}


		virtual public global::Allors.Extent<C2> S12C2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S12C2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S12C2many2manies.RelationType, value);
			}
		}

		virtual public void AddS12C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S12C2many2manies.RelationType, value);
		}

		virtual public void RemoveS12C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S12C2many2manies.RelationType, value);
		}

		virtual public bool ExistS12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S12C2many2manies.RelationType);
			}
		}

		virtual public void RemoveS12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S12C2many2manies.RelationType);
		}


		virtual public C2 S12C2many2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S12C2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S12C2many2one.RelationType, value);
			}
		}

		virtual public bool ExistS12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S12C2many2one.RelationType);
			}
		}

		virtual public void RemoveS12C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S12C2many2one.RelationType);
		}


		virtual public C2 S12C2one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S12C2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S12C2one2one.RelationType, value);
			}
		}

		virtual public bool ExistS12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S12C2one2one.RelationType);
			}
		}

		virtual public void RemoveS12C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S12C2one2one.RelationType);
		}


		virtual public global::Allors.Extent<C2> S12C2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S12C2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S12C2one2manies.RelationType, value);
			}
		}

		virtual public void AddS12C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S12C2one2manies.RelationType, value);
		}

		virtual public void RemoveS12C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S12C2one2manies.RelationType, value);
		}

		virtual public bool ExistS12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S12C2one2manies.RelationType);
			}
		}

		virtual public void RemoveS12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S12C2one2manies.RelationType);
		}


		virtual public global::System.Boolean? S12AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.S12AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistS12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveS12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsBoolean.RelationType);
		}


		virtual public global::System.Double? S12AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.S12AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistS12AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveS12AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsDouble.RelationType);
		}


		virtual public global::System.Int32? S12AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.S12AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistS12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveS12AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsInteger.RelationType);
		}


		virtual public global::System.Decimal? S12AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.S12AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistS12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveS12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsDecimal.RelationType);
		}



		virtual public global::Allors.Extent<C1> C1sWhereC1C2many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1C2many2many.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1C2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1C2many2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1C2many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1C2many2one.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1C2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1C2many2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1C2one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1C2one2one.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1C2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1C2one2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1C2one2many
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1C2one2many.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1C2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1C2one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereC2C2many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereC2C2many2one.RelationType);
			}
		}

		virtual public bool ExistC2sWhereC2C2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereC2C2many2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereC2C2many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereC2C2many2many.RelationType);
			}
		}

		virtual public bool ExistC2sWhereC2C2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereC2C2many2many.RelationType);
			}
		}


		virtual public C2 C2WhereC2C2one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereC2C2one2one.RelationType);
			}
		}

		virtual public bool ExistC2WhereC2C2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereC2C2one2one.RelationType);
			}
		}


		virtual public C2 C2WhereC2C2one2many
		{
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereC2C2one2many.RelationType);
			}
		}

		virtual public bool ExistC2WhereC2C2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereC2C2one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C3> C3sWhereC3C2many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C3sWhereC3C2many2many.RelationType);
			}
		}

		virtual public bool ExistC3sWhereC3C2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C3sWhereC3C2many2many.RelationType);
			}
		}


		virtual public C3 C3WhereC3C2one2many
		{
			get
			{
				return (C3) Strategy.GetCompositeAssociation(Meta.C3WhereC3C2one2many.RelationType);
			}
		}

		virtual public bool ExistC3WhereC3C2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C3WhereC3C2one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C3> C3sWhereC3C2many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C3sWhereC3C2many2one.RelationType);
			}
		}

		virtual public bool ExistC3sWhereC3C2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C3sWhereC3C2many2one.RelationType);
			}
		}


		virtual public C3 C3WhereC3C2one2one
		{
			get
			{
				return (C3) Strategy.GetCompositeAssociation(Meta.C3WhereC3C2one2one.RelationType);
			}
		}

		virtual public bool ExistC3WhereC3C2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C3WhereC3C2one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1C2many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1C2many2one.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1C2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1C2many2one.RelationType);
			}
		}


		virtual public I1 I1WhereI1C2one2one
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1C2one2one.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1C2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1C2one2one.RelationType);
			}
		}


		virtual public I1 I1WhereI1C2one2many
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1C2one2many.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1C2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1C2one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1C2many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1C2many2many.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1C2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1C2many2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereI12C2many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereI12C2many2one.RelationType);
			}
		}

		virtual public bool ExistI12sWhereI12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereI12C2many2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereI12C2many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereI12C2many2many.RelationType);
			}
		}

		virtual public bool ExistI12sWhereI12C2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereI12C2many2many.RelationType);
			}
		}


		virtual public I12 I12WhereI12C2one2one
		{
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereI12C2one2one.RelationType);
			}
		}

		virtual public bool ExistI12WhereI12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereI12C2one2one.RelationType);
			}
		}


		virtual public I12 I12WhereI12C2one2many
		{
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereI12C2one2many.RelationType);
			}
		}

		virtual public bool ExistI12WhereI12C2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereI12C2one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<S12> S12sWhereS12C2many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S12sWhereS12C2many2many.RelationType);
			}
		}

		virtual public bool ExistS12sWhereS12C2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S12sWhereS12C2many2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<S12> S12sWhereS12C2many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S12sWhereS12C2many2one.RelationType);
			}
		}

		virtual public bool ExistS12sWhereS12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S12sWhereS12C2many2one.RelationType);
			}
		}


		virtual public S12 S12WhereS12C2one2one
		{
			get
			{
				return (S12) Strategy.GetCompositeAssociation(Meta.S12WhereS12C2one2one.RelationType);
			}
		}

		virtual public bool ExistS12WhereS12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S12WhereS12C2one2one.RelationType);
			}
		}


		virtual public S12 S12WhereS12C2one2many
		{
			get
			{
				return (S12) Strategy.GetCompositeAssociation(Meta.S12WhereS12C2one2many.RelationType);
			}
		}

		virtual public bool ExistS12WhereS12C2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S12WhereS12C2one2many.RelationType);
			}
		}


		virtual public S1234 S1234WhereS1234C2one2one
		{
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereS1234C2one2one.RelationType);
			}
		}

		virtual public bool ExistS1234WhereS1234C2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereS1234C2one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereS1234C2many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereS1234C2many2many.RelationType);
			}
		}

		virtual public bool ExistS1234sWhereS1234C2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereS1234C2many2many.RelationType);
			}
		}


		virtual public S1234 S1234WhereS1234C2one2many
		{
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereS1234C2one2many.RelationType);
			}
		}

		virtual public bool ExistS1234WhereS1234C2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereS1234C2one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereS1234C2many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereS1234C2many2one.RelationType);
			}
		}

		virtual public bool ExistS1234sWhereS1234C2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereS1234C2many2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1I2one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1I2one2one.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1I2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1I2one2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1I2one2many
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1I2one2many.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1I2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1I2one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1I2many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1I2many2one.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1I2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1I2many2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1I2many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1I2many2many.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1I2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1I2many2many.RelationType);
			}
		}


		virtual public I1 I1WhereI1I2one2many
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1I2one2many.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1I2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1I2one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1I2many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1I2many2one.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1I2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1I2many2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1I2many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1I2many2many.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1I2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1I2many2many.RelationType);
			}
		}


		virtual public I1 I1WhereI1I2one2one
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1I2one2one.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1I2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1I2one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereS1234many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereS1234many2one.RelationType);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereS1234many2one.RelationType);
			}
		}


		virtual public S1234 S1234WhereS1234one2many
		{
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereS1234one2many.RelationType);
			}
		}

		virtual public bool ExistS1234WhereS1234one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereS1234one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereS1234many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereS1234many2many.RelationType);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereS1234many2many.RelationType);
			}
		}


		virtual public S1234 S1234WhereS1234one2one
		{
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereS1234one2one.RelationType);
			}
		}

		virtual public bool ExistS1234WhereS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereS1234one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1S2many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1S2many2one.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1S2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1S2many2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1S2one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1S2one2one.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1S2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1S2one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1S2many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1S2many2many.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1S2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1S2many2many.RelationType);
			}
		}


		virtual public C1 C1WhereC1S2one2many
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1S2one2many.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1S2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1S2one2many.RelationType);
			}
		}


		virtual public I1 I1WhereI1S2one2one
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1S2one2one.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1S2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1S2one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1S2many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1S2many2many.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1S2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1S2many2many.RelationType);
			}
		}


		virtual public I1 I1WhereI1S2one2many
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1S2one2many.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1S2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1S2one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1S2many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1S2many2one.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1S2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1S2many2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<S1> S1sWhereS1S2many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1sWhereS1S2many2one.RelationType);
			}
		}

		virtual public bool ExistS1sWhereS1S2many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1sWhereS1S2many2one.RelationType);
			}
		}


		virtual public S1 S1WhereS1S2one2many
		{
			get
			{
				return (S1) Strategy.GetCompositeAssociation(Meta.S1WhereS1S2one2many.RelationType);
			}
		}

		virtual public bool ExistS1WhereS1S2one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1WhereS1S2one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<S1> S1sWhereS1S2many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1sWhereS1S2many2many.RelationType);
			}
		}

		virtual public bool ExistS1sWhereS1S2many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1sWhereS1S2many2many.RelationType);
			}
		}


		virtual public S1 S1WhereS1S2one2one
		{
			get
			{
				return (S1) Strategy.GetCompositeAssociation(Meta.S1WhereS1S2one2one.RelationType);
			}
		}

		virtual public bool ExistS1WhereS1S2one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1WhereS1S2one2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1I12one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1I12one2one.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1I12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1I12one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1I12many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1I12many2one.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1I12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1I12many2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1I12one2many
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1I12one2many.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1I12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1I12one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1I12many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1I12many2many.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1I12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1I12many2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1I12many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1I12many2one.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1I12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1I12many2one.RelationType);
			}
		}


		virtual public I1 I1WhereI1I12one2one
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1I12one2one.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1I12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1I12one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1I12many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1I12many2many.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1I12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1I12many2many.RelationType);
			}
		}


		virtual public I1 I1WhereI1I12one2many
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1I12one2many.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1I12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1I12one2many.RelationType);
			}
		}


        #region Test Helpers
        public static C2 Create(ISession session) => (C2)session.Create(session.Database.State().M.C2.ObjectType);

        public static C2[] Create(ISession session, int count) => (C2[])session.Create(session.Database.State().M.C2.ObjectType, count);

        public static C2 Instantiate(ISession session, long id) => (C2)session.Instantiate(id);

        public static C2[] Instantiate(ISession session, string[] ids) => (C2[])session.Instantiate(ids);

        public static C2[] Extent(ISession session) => (C2[])session.Extent(session.Database.State().M.C2.ObjectType).ToArray();
        #endregion
	}
}