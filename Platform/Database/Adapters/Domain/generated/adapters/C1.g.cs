// Allors generated file.
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class C1 : Allors.IObject , I1, I12
	{
		private readonly IStrategy strategy;
		private readonly Allors.Meta.M m;

		public C1(Allors.IStrategy strategy)
		{
			this.strategy = strategy;
			this.m = this.DatabaseState().M;
		}

		public Allors.Meta.M M => m;

		public Allors.Meta.MetaC1 Meta => m.C1;

		public long Id
		{
			get { return this.strategy.ObjectId; }
		}

		public IStrategy Strategy
        {
            [System.Diagnostics.DebuggerStepThrough]
            get { return this.strategy; }
        }

		public static C1 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (C1) allorsSession.Instantiate(allorsObjectId);
		}

		public override bool Equals(object obj)
        {
            var typedObj = obj as IObject;
            return typedObj != null &&
                   typedObj.Strategy.ObjectId.Equals(this.Strategy.ObjectId) &&
                   typedObj.Strategy.Session.Database.Id.Equals(this.Strategy.Session.Database.Id);
        }

		public override int GetHashCode()
        {
            return this.Strategy.ObjectId.GetHashCode();
        }



		virtual public global::System.Decimal? C1DecimalBetweenA
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.C1DecimalBetweenA.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DecimalBetweenA.RelationType, value);
			}
		}

		virtual public bool ExistC1DecimalBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DecimalBetweenA.RelationType);
			}
		}

		virtual public void RemoveC1DecimalBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.C1DecimalBetweenA.RelationType);
		}


		virtual public I2 C1I2one2one
		{
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.C1I2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1I2one2one.RelationType, value);
			}
		}

		virtual public bool ExistC1I2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1I2one2one.RelationType);
			}
		}

		virtual public void RemoveC1I2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1I2one2one.RelationType);
		}


		virtual public global::System.Decimal? C1DecimalBetweenB
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.C1DecimalBetweenB.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DecimalBetweenB.RelationType, value);
			}
		}

		virtual public bool ExistC1DecimalBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DecimalBetweenB.RelationType);
			}
		}

		virtual public void RemoveC1DecimalBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.C1DecimalBetweenB.RelationType);
		}


		virtual public global::System.String Argument
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Argument.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Argument.RelationType, value);
			}
		}

		virtual public bool ExistArgument{
			get
			{
				return Strategy.ExistUnitRole(Meta.Argument.RelationType);
			}
		}

		virtual public void RemoveArgument()
		{
			Strategy.RemoveUnitRole(Meta.Argument.RelationType);
		}


		virtual public global::Allors.Extent<S1> C1S1one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1S1one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1S1one2manies.RelationType, value);
			}
		}

		virtual public void AddC1S1one2many (S1 value)
		{
			Strategy.AddCompositeRole(Meta.C1S1one2manies.RelationType, value);
		}

		virtual public void RemoveC1S1one2many (S1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1S1one2manies.RelationType, value);
		}

		virtual public bool ExistC1S1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1S1one2manies.RelationType);
			}
		}

		virtual public void RemoveC1S1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1S1one2manies.RelationType);
		}


		virtual public I12 C1I12one2one
		{
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.C1I12one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1I12one2one.RelationType, value);
			}
		}

		virtual public bool ExistC1I12one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1I12one2one.RelationType);
			}
		}

		virtual public void RemoveC1I12one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1I12one2one.RelationType);
		}


		virtual public global::System.String C1AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.C1AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistC1AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsString.RelationType);
			}
		}

		virtual public void RemoveC1AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsString.RelationType);
		}


		virtual public C1 C1C1many2one
		{
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.C1C1many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1C1many2one.RelationType, value);
			}
		}

		virtual public bool ExistC1C1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1C1many2one.RelationType);
			}
		}

		virtual public void RemoveC1C1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1C1many2one.RelationType);
		}


		virtual public S2 C1S2many2one
		{
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.C1S2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1S2many2one.RelationType, value);
			}
		}

		virtual public bool ExistC1S2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1S2many2one.RelationType);
			}
		}

		virtual public void RemoveC1S2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1S2many2one.RelationType);
		}


		virtual public global::System.Double? C1FloatBetweenA
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.C1FloatBetweenA.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1FloatBetweenA.RelationType, value);
			}
		}

		virtual public bool ExistC1FloatBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1FloatBetweenA.RelationType);
			}
		}

		virtual public void RemoveC1FloatBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.C1FloatBetweenA.RelationType);
		}


		virtual public C1 Many2One
		{
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.Many2One.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.Many2One.RelationType, value);
			}
		}

		virtual public bool ExistMany2One
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.Many2One.RelationType);
			}
		}

		virtual public void RemoveMany2One()
		{
			Strategy.RemoveCompositeRole(Meta.Many2One.RelationType);
		}


		virtual public global::Allors.Extent<C1> C1C1many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1C1many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1C1many2manies.RelationType, value);
			}
		}

		virtual public void AddC1C1many2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.C1C1many2manies.RelationType, value);
		}

		virtual public void RemoveC1C1many2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1C1many2manies.RelationType, value);
		}

		virtual public bool ExistC1C1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1C1many2manies.RelationType);
			}
		}

		virtual public void RemoveC1C1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1C1many2manies.RelationType);
		}


		virtual public global::Allors.Extent<S1> C1S1many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1S1many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1S1many2manies.RelationType, value);
			}
		}

		virtual public void AddC1S1many2many (S1 value)
		{
			Strategy.AddCompositeRole(Meta.C1S1many2manies.RelationType, value);
		}

		virtual public void RemoveC1S1many2many (S1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1S1many2manies.RelationType, value);
		}

		virtual public bool ExistC1S1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1S1many2manies.RelationType);
			}
		}

		virtual public void RemoveC1S1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1S1many2manies.RelationType);
		}


		virtual public global::System.Double? C1FloatBetweenB
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.C1FloatBetweenB.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1FloatBetweenB.RelationType, value);
			}
		}

		virtual public bool ExistC1FloatBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1FloatBetweenB.RelationType);
			}
		}

		virtual public void RemoveC1FloatBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.C1FloatBetweenB.RelationType);
		}


		virtual public I1 C1I1one2one
		{
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.C1I1one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1I1one2one.RelationType, value);
			}
		}

		virtual public bool ExistC1I1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1I1one2one.RelationType);
			}
		}

		virtual public void RemoveC1I1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1I1one2one.RelationType);
		}


		virtual public global::System.Int32? C1IntegerLessThan
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.C1IntegerLessThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1IntegerLessThan.RelationType, value);
			}
		}

		virtual public bool ExistC1IntegerLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1IntegerLessThan.RelationType);
			}
		}

		virtual public void RemoveC1IntegerLessThan()
		{
			Strategy.RemoveUnitRole(Meta.C1IntegerLessThan.RelationType);
		}


		virtual public global::System.String C1StringLarge
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.C1StringLarge.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1StringLarge.RelationType, value);
			}
		}

		virtual public bool ExistC1StringLarge{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1StringLarge.RelationType);
			}
		}

		virtual public void RemoveC1StringLarge()
		{
			Strategy.RemoveUnitRole(Meta.C1StringLarge.RelationType);
		}


		virtual public global::Allors.Extent<I2> C1I2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1I2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1I2one2manies.RelationType, value);
			}
		}

		virtual public void AddC1I2one2many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.C1I2one2manies.RelationType, value);
		}

		virtual public void RemoveC1I2one2many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1I2one2manies.RelationType, value);
		}

		virtual public bool ExistC1I2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1I2one2manies.RelationType);
			}
		}

		virtual public void RemoveC1I2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1I2one2manies.RelationType);
		}


		virtual public C1 C1C1one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.C1C1one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1C1one2one.RelationType, value);
			}
		}

		virtual public bool ExistC1C1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1C1one2one.RelationType);
			}
		}

		virtual public void RemoveC1C1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1C1one2one.RelationType);
		}


		virtual public global::System.Double? C1FloatGreaterThan
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.C1FloatGreaterThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1FloatGreaterThan.RelationType, value);
			}
		}

		virtual public bool ExistC1FloatGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1FloatGreaterThan.RelationType);
			}
		}

		virtual public void RemoveC1FloatGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.C1FloatGreaterThan.RelationType);
		}


		virtual public I2 C1I2many2one
		{
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.C1I2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1I2many2one.RelationType, value);
			}
		}

		virtual public bool ExistC1I2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1I2many2one.RelationType);
			}
		}

		virtual public void RemoveC1I2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1I2many2one.RelationType);
		}


		virtual public I12 C1I12many2one
		{
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.C1I12many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1I12many2one.RelationType, value);
			}
		}

		virtual public bool ExistC1I12many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1I12many2one.RelationType);
			}
		}

		virtual public void RemoveC1I12many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1I12many2one.RelationType);
		}


		virtual public global::System.DateTime? C1DateTimeLessThan
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.C1DateTimeLessThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DateTimeLessThan.RelationType, value);
			}
		}

		virtual public bool ExistC1DateTimeLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DateTimeLessThan.RelationType);
			}
		}

		virtual public void RemoveC1DateTimeLessThan()
		{
			Strategy.RemoveUnitRole(Meta.C1DateTimeLessThan.RelationType);
		}


		virtual public global::System.Byte[] IndexedMaxBinary
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(Meta.IndexedMaxBinary.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.IndexedMaxBinary.RelationType, value);
			}
		}

		virtual public bool ExistIndexedMaxBinary{
			get
			{
				return Strategy.ExistUnitRole(Meta.IndexedMaxBinary.RelationType);
			}
		}

		virtual public void RemoveIndexedMaxBinary()
		{
			Strategy.RemoveUnitRole(Meta.IndexedMaxBinary.RelationType);
		}


		virtual public global::System.String IndexedMaxString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.IndexedMaxString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.IndexedMaxString.RelationType, value);
			}
		}

		virtual public bool ExistIndexedMaxString{
			get
			{
				return Strategy.ExistUnitRole(Meta.IndexedMaxString.RelationType);
			}
		}

		virtual public void RemoveIndexedMaxString()
		{
			Strategy.RemoveUnitRole(Meta.IndexedMaxString.RelationType);
		}


		virtual public global::System.DateTime? C1DateTimeBetweenA
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.C1DateTimeBetweenA.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DateTimeBetweenA.RelationType, value);
			}
		}

		virtual public bool ExistC1DateTimeBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DateTimeBetweenA.RelationType);
			}
		}

		virtual public void RemoveC1DateTimeBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.C1DateTimeBetweenA.RelationType);
		}


		virtual public global::Allors.Extent<C2> C1C2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1C2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1C2many2manies.RelationType, value);
			}
		}

		virtual public void AddC1C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.C1C2many2manies.RelationType, value);
		}

		virtual public void RemoveC1C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1C2many2manies.RelationType, value);
		}

		virtual public bool ExistC1C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1C2many2manies.RelationType);
			}
		}

		virtual public void RemoveC1C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1C2many2manies.RelationType);
		}


		virtual public S1 C1S1many2one
		{
			get
			{
				return (S1) Strategy.GetCompositeRole(Meta.C1S1many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1S1many2one.RelationType, value);
			}
		}

		virtual public bool ExistC1S1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1S1many2one.RelationType);
			}
		}

		virtual public void RemoveC1S1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1S1many2one.RelationType);
		}


		virtual public global::Allors.Extent<I1> C1I1many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1I1many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1I1many2manies.RelationType, value);
			}
		}

		virtual public void AddC1I1many2many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.C1I1many2manies.RelationType, value);
		}

		virtual public void RemoveC1I1many2many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1I1many2manies.RelationType, value);
		}

		virtual public bool ExistC1I1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1I1many2manies.RelationType);
			}
		}

		virtual public void RemoveC1I1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1I1many2manies.RelationType);
		}


		virtual public global::System.Double? C1FloatLessThan
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.C1FloatLessThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1FloatLessThan.RelationType, value);
			}
		}

		virtual public bool ExistC1FloatLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1FloatLessThan.RelationType);
			}
		}

		virtual public void RemoveC1FloatLessThan()
		{
			Strategy.RemoveUnitRole(Meta.C1FloatLessThan.RelationType);
		}


		virtual public I1 C1I1many2one
		{
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.C1I1many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1I1many2one.RelationType, value);
			}
		}

		virtual public bool ExistC1I1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1I1many2one.RelationType);
			}
		}

		virtual public void RemoveC1I1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1I1many2one.RelationType);
		}


		virtual public global::System.Decimal? C1DecimalGreaterThan
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.C1DecimalGreaterThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DecimalGreaterThan.RelationType, value);
			}
		}

		virtual public bool ExistC1DecimalGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DecimalGreaterThan.RelationType);
			}
		}

		virtual public void RemoveC1DecimalGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.C1DecimalGreaterThan.RelationType);
		}


		virtual public global::System.Decimal? C1AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.C1AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistC1AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveC1AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsDecimal.RelationType);
		}


		virtual public S2 C1S2one2one
		{
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.C1S2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1S2one2one.RelationType, value);
			}
		}

		virtual public bool ExistC1S2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1S2one2one.RelationType);
			}
		}

		virtual public void RemoveC1S2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1S2one2one.RelationType);
		}


		virtual public global::System.DateTime? C1DateTimeBetweenB
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.C1DateTimeBetweenB.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DateTimeBetweenB.RelationType, value);
			}
		}

		virtual public bool ExistC1DateTimeBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DateTimeBetweenB.RelationType);
			}
		}

		virtual public void RemoveC1DateTimeBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.C1DateTimeBetweenB.RelationType);
		}


		virtual public global::System.Byte[] C1AllorsBinary
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(Meta.C1AllorsBinary.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsBinary.RelationType, value);
			}
		}

		virtual public bool ExistC1AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsBinary.RelationType);
			}
		}

		virtual public void RemoveC1AllorsBinary()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsBinary.RelationType);
		}


		virtual public global::System.DateTime? C1DateTimeGreaterThan
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.C1DateTimeGreaterThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DateTimeGreaterThan.RelationType, value);
			}
		}

		virtual public bool ExistC1DateTimeGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DateTimeGreaterThan.RelationType);
			}
		}

		virtual public void RemoveC1DateTimeGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.C1DateTimeGreaterThan.RelationType);
		}


		virtual public S1 C1S1one2one
		{
			get
			{
				return (S1) Strategy.GetCompositeRole(Meta.C1S1one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1S1one2one.RelationType, value);
			}
		}

		virtual public bool ExistC1S1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1S1one2one.RelationType);
			}
		}

		virtual public void RemoveC1S1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1S1one2one.RelationType);
		}


		virtual public global::Allors.Extent<C1> C1C1one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1C1one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1C1one2manies.RelationType, value);
			}
		}

		virtual public void AddC1C1one2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.C1C1one2manies.RelationType, value);
		}

		virtual public void RemoveC1C1one2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1C1one2manies.RelationType, value);
		}

		virtual public bool ExistC1C1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1C1one2manies.RelationType);
			}
		}

		virtual public void RemoveC1C1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1C1one2manies.RelationType);
		}


		virtual public global::Allors.Extent<I1> C1I1one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1I1one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1I1one2manies.RelationType, value);
			}
		}

		virtual public void AddC1I1one2many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.C1I1one2manies.RelationType, value);
		}

		virtual public void RemoveC1I1one2many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1I1one2manies.RelationType, value);
		}

		virtual public bool ExistC1I1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1I1one2manies.RelationType);
			}
		}

		virtual public void RemoveC1I1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1I1one2manies.RelationType);
		}


		virtual public C2 C1C2many2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.C1C2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1C2many2one.RelationType, value);
			}
		}

		virtual public bool ExistC1C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1C2many2one.RelationType);
			}
		}

		virtual public void RemoveC1C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1C2many2one.RelationType);
		}


		virtual public global::Allors.Extent<I12> C1I12one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1I12one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1I12one2manies.RelationType, value);
			}
		}

		virtual public void AddC1I12one2many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.C1I12one2manies.RelationType, value);
		}

		virtual public void RemoveC1I12one2many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1I12one2manies.RelationType, value);
		}

		virtual public bool ExistC1I12one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1I12one2manies.RelationType);
			}
		}

		virtual public void RemoveC1I12one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1I12one2manies.RelationType);
		}


		virtual public global::Allors.Extent<S2> C1S2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1S2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1S2many2manies.RelationType, value);
			}
		}

		virtual public void AddC1S2many2many (S2 value)
		{
			Strategy.AddCompositeRole(Meta.C1S2many2manies.RelationType, value);
		}

		virtual public void RemoveC1S2many2many (S2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1S2many2manies.RelationType, value);
		}

		virtual public bool ExistC1S2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1S2many2manies.RelationType);
			}
		}

		virtual public void RemoveC1S2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1S2many2manies.RelationType);
		}


		virtual public C2 C1C2one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.C1C2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1C2one2one.RelationType, value);
			}
		}

		virtual public bool ExistC1C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1C2one2one.RelationType);
			}
		}

		virtual public void RemoveC1C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1C2one2one.RelationType);
		}


		virtual public global::System.Boolean? C1AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.C1AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistC1AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveC1AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsBoolean.RelationType);
		}


		virtual public global::Allors.Extent<I12> C1I12many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1I12many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1I12many2manies.RelationType, value);
			}
		}

		virtual public void AddC1I12many2many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.C1I12many2manies.RelationType, value);
		}

		virtual public void RemoveC1I12many2many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1I12many2manies.RelationType, value);
		}

		virtual public bool ExistC1I12many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1I12many2manies.RelationType);
			}
		}

		virtual public void RemoveC1I12many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1I12many2manies.RelationType);
		}


		virtual public global::Allors.Extent<I2> C1I2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1I2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1I2many2manies.RelationType, value);
			}
		}

		virtual public void AddC1I2many2many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.C1I2many2manies.RelationType, value);
		}

		virtual public void RemoveC1I2many2many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1I2many2manies.RelationType, value);
		}

		virtual public bool ExistC1I2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1I2many2manies.RelationType);
			}
		}

		virtual public void RemoveC1I2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1I2many2manies.RelationType);
		}


		virtual public global::System.Guid? C1AllorsUnique
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(Meta.C1AllorsUnique.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsUnique.RelationType, value);
			}
		}

		virtual public bool ExistC1AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsUnique.RelationType);
			}
		}

		virtual public void RemoveC1AllorsUnique()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsUnique.RelationType);
		}


		virtual public C3 C1C3one2one
		{
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.C1C3one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1C3one2one.RelationType, value);
			}
		}

		virtual public bool ExistC1C3one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1C3one2one.RelationType);
			}
		}

		virtual public void RemoveC1C3one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1C3one2one.RelationType);
		}


		virtual public global::Allors.Extent<C3> C1C3many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1C3many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1C3many2manies.RelationType, value);
			}
		}

		virtual public void AddC1C3many2many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.C1C3many2manies.RelationType, value);
		}

		virtual public void RemoveC1C3many2many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1C3many2manies.RelationType, value);
		}

		virtual public bool ExistC1C3many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1C3many2manies.RelationType);
			}
		}

		virtual public void RemoveC1C3many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1C3many2manies.RelationType);
		}


		virtual public global::System.String C1StringEquals
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.C1StringEquals.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1StringEquals.RelationType, value);
			}
		}

		virtual public bool ExistC1StringEquals{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1StringEquals.RelationType);
			}
		}

		virtual public void RemoveC1StringEquals()
		{
			Strategy.RemoveUnitRole(Meta.C1StringEquals.RelationType);
		}


		virtual public global::System.Int32? C1IntegerGreaterThan
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.C1IntegerGreaterThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1IntegerGreaterThan.RelationType, value);
			}
		}

		virtual public bool ExistC1IntegerGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1IntegerGreaterThan.RelationType);
			}
		}

		virtual public void RemoveC1IntegerGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.C1IntegerGreaterThan.RelationType);
		}


		virtual public C3 C3may2one
		{
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.C3may2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3may2one.RelationType, value);
			}
		}

		virtual public bool ExistC3may2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3may2one.RelationType);
			}
		}

		virtual public void RemoveC3may2one()
		{
			Strategy.RemoveCompositeRole(Meta.C3may2one.RelationType);
		}


		virtual public global::System.Int32? C1IntegerBetweenB
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.C1IntegerBetweenB.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1IntegerBetweenB.RelationType, value);
			}
		}

		virtual public bool ExistC1IntegerBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1IntegerBetweenB.RelationType);
			}
		}

		virtual public void RemoveC1IntegerBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.C1IntegerBetweenB.RelationType);
		}


		virtual public global::System.DateTime? C1AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.C1AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistC1AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveC1AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsDateTime.RelationType);
		}


		virtual public global::System.Int32? C1IntegerBetweenA
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.C1IntegerBetweenA.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1IntegerBetweenA.RelationType, value);
			}
		}

		virtual public bool ExistC1IntegerBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1IntegerBetweenA.RelationType);
			}
		}

		virtual public void RemoveC1IntegerBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.C1IntegerBetweenA.RelationType);
		}


		virtual public global::System.Double? C1AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.C1AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistC1AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveC1AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsDouble.RelationType);
		}


		virtual public global::Allors.Extent<C2> C1C2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1C2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1C2one2manies.RelationType, value);
			}
		}

		virtual public void AddC1C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.C1C2one2manies.RelationType, value);
		}

		virtual public void RemoveC1C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1C2one2manies.RelationType, value);
		}

		virtual public bool ExistC1C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1C2one2manies.RelationType);
			}
		}

		virtual public void RemoveC1C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1C2one2manies.RelationType);
		}


		virtual public global::Allors.Extent<S2> C1S2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1S2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1S2one2manies.RelationType, value);
			}
		}

		virtual public void AddC1S2one2many (S2 value)
		{
			Strategy.AddCompositeRole(Meta.C1S2one2manies.RelationType, value);
		}

		virtual public void RemoveC1S2one2many (S2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1S2one2manies.RelationType, value);
		}

		virtual public bool ExistC1S2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1S2one2manies.RelationType);
			}
		}

		virtual public void RemoveC1S2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1S2one2manies.RelationType);
		}


		virtual public global::System.Int32? C1AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.C1AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistC1AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveC1AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.C1AllorsInteger.RelationType);
		}


		virtual public global::System.Decimal? C1DecimalLessThan
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.C1DecimalLessThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C1DecimalLessThan.RelationType, value);
			}
		}

		virtual public bool ExistC1DecimalLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.C1DecimalLessThan.RelationType);
			}
		}

		virtual public void RemoveC1DecimalLessThan()
		{
			Strategy.RemoveUnitRole(Meta.C1DecimalLessThan.RelationType);
		}


		virtual public global::Allors.Extent<C3> C1C3one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C1C3one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C1C3one2manies.RelationType, value);
			}
		}

		virtual public void AddC1C3one2many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.C1C3one2manies.RelationType, value);
		}

		virtual public void RemoveC1C3one2many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.C1C3one2manies.RelationType, value);
		}

		virtual public bool ExistC1C3one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C1C3one2manies.RelationType);
			}
		}

		virtual public void RemoveC1C3one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C1C3one2manies.RelationType);
		}


		virtual public global::Allors.Extent<I34> I1I34one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I34one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I34one2manies.RelationType, value);
			}
		}

		virtual public void AddI1I34one2many (I34 value)
		{
			Strategy.AddCompositeRole(Meta.I1I34one2manies.RelationType, value);
		}

		virtual public void RemoveI1I34one2many (I34 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I34one2manies.RelationType, value);
		}

		virtual public bool ExistI1I34one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I34one2manies.RelationType);
			}
		}

		virtual public void RemoveI1I34one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I34one2manies.RelationType);
		}


		virtual public global::Allors.Extent<I2> I1I2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I2one2manies.RelationType, value);
			}
		}

		virtual public void AddI1I2one2many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.I1I2one2manies.RelationType, value);
		}

		virtual public void RemoveI1I2one2many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I2one2manies.RelationType, value);
		}

		virtual public bool ExistI1I2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I2one2manies.RelationType);
			}
		}

		virtual public void RemoveI1I2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I2one2manies.RelationType);
		}


		virtual public I2 I1I2many2one
		{
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.I1I2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I2many2one.RelationType, value);
			}
		}

		virtual public bool ExistI1I2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I2many2one.RelationType);
			}
		}

		virtual public void RemoveI1I2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I2many2one.RelationType);
		}


		virtual public C2 I1C2many2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I1C2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1C2many2one.RelationType, value);
			}
		}

		virtual public bool ExistI1C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1C2many2one.RelationType);
			}
		}

		virtual public void RemoveI1C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1C2many2one.RelationType);
		}


		virtual public C2 I1C2one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I1C2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1C2one2one.RelationType, value);
			}
		}

		virtual public bool ExistI1C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1C2one2one.RelationType);
			}
		}

		virtual public void RemoveI1C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1C2one2one.RelationType);
		}


		virtual public global::System.Decimal? I1DecimalBetweenA
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I1DecimalBetweenA.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DecimalBetweenA.RelationType, value);
			}
		}

		virtual public bool ExistI1DecimalBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DecimalBetweenA.RelationType);
			}
		}

		virtual public void RemoveI1DecimalBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.I1DecimalBetweenA.RelationType);
		}


		virtual public S1 I1S1one2one
		{
			get
			{
				return (S1) Strategy.GetCompositeRole(Meta.I1S1one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1S1one2one.RelationType, value);
			}
		}

		virtual public bool ExistI1S1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1S1one2one.RelationType);
			}
		}

		virtual public void RemoveI1S1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1S1one2one.RelationType);
		}


		virtual public I12 I1I12many2one
		{
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.I1I12many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I12many2one.RelationType, value);
			}
		}

		virtual public bool ExistI1I12many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I12many2one.RelationType);
			}
		}

		virtual public void RemoveI1I12many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I12many2one.RelationType);
		}


		virtual public global::System.String I1AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I1AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistI1AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsString.RelationType);
			}
		}

		virtual public void RemoveI1AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsString.RelationType);
		}


		virtual public global::System.DateTime? I1DateTimeLessThan
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.I1DateTimeLessThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DateTimeLessThan.RelationType, value);
			}
		}

		virtual public bool ExistI1DateTimeLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DateTimeLessThan.RelationType);
			}
		}

		virtual public void RemoveI1DateTimeLessThan()
		{
			Strategy.RemoveUnitRole(Meta.I1DateTimeLessThan.RelationType);
		}


		virtual public global::Allors.Extent<C2> I1C2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1C2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1C2one2manies.RelationType, value);
			}
		}

		virtual public void AddI1C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I1C2one2manies.RelationType, value);
		}

		virtual public void RemoveI1C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1C2one2manies.RelationType, value);
		}

		virtual public bool ExistI1C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1C2one2manies.RelationType);
			}
		}

		virtual public void RemoveI1C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1C2one2manies.RelationType);
		}


		virtual public global::System.String I1StringLarge
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I1StringLarge.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1StringLarge.RelationType, value);
			}
		}

		virtual public bool ExistI1StringLarge{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1StringLarge.RelationType);
			}
		}

		virtual public void RemoveI1StringLarge()
		{
			Strategy.RemoveUnitRole(Meta.I1StringLarge.RelationType);
		}


		virtual public global::System.Double? I1FloatLessThan
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I1FloatLessThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1FloatLessThan.RelationType, value);
			}
		}

		virtual public bool ExistI1FloatLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1FloatLessThan.RelationType);
			}
		}

		virtual public void RemoveI1FloatLessThan()
		{
			Strategy.RemoveUnitRole(Meta.I1FloatLessThan.RelationType);
		}


		virtual public global::System.DateTime? I1AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.I1AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistI1AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveI1AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsDateTime.RelationType);
		}


		virtual public C1 I1C1many2one
		{
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.I1C1many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1C1many2one.RelationType, value);
			}
		}

		virtual public bool ExistI1C1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1C1many2one.RelationType);
			}
		}

		virtual public void RemoveI1C1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1C1many2one.RelationType);
		}


		virtual public I12 I1I12one2one
		{
			get
			{
				return (I12) Strategy.GetCompositeRole(Meta.I1I12one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I12one2one.RelationType, value);
			}
		}

		virtual public bool ExistI1I12one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I12one2one.RelationType);
			}
		}

		virtual public void RemoveI1I12one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I12one2one.RelationType);
		}


		virtual public global::System.Decimal? I1DecimalGreaterThan
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I1DecimalGreaterThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DecimalGreaterThan.RelationType, value);
			}
		}

		virtual public bool ExistI1DecimalGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DecimalGreaterThan.RelationType);
			}
		}

		virtual public void RemoveI1DecimalGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.I1DecimalGreaterThan.RelationType);
		}


		virtual public C1 I1C1one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.I1C1one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1C1one2one.RelationType, value);
			}
		}

		virtual public bool ExistI1C1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1C1one2one.RelationType);
			}
		}

		virtual public void RemoveI1C1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1C1one2one.RelationType);
		}


		virtual public global::Allors.Extent<I2> I1I2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I2many2manies.RelationType, value);
			}
		}

		virtual public void AddI1I2many2many (I2 value)
		{
			Strategy.AddCompositeRole(Meta.I1I2many2manies.RelationType, value);
		}

		virtual public void RemoveI1I2many2many (I2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I2many2manies.RelationType, value);
		}

		virtual public bool ExistI1I2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I2many2manies.RelationType);
			}
		}

		virtual public void RemoveI1I2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I2many2manies.RelationType);
		}


		virtual public global::System.Int32? I1IntegerBetweenA
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I1IntegerBetweenA.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1IntegerBetweenA.RelationType, value);
			}
		}

		virtual public bool ExistI1IntegerBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1IntegerBetweenA.RelationType);
			}
		}

		virtual public void RemoveI1IntegerBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.I1IntegerBetweenA.RelationType);
		}


		virtual public I34 I1I34many2one
		{
			get
			{
				return (I34) Strategy.GetCompositeRole(Meta.I1I34many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I34many2one.RelationType, value);
			}
		}

		virtual public bool ExistI1I34many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I34many2one.RelationType);
			}
		}

		virtual public void RemoveI1I34many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I34many2one.RelationType);
		}


		virtual public global::System.Double? I1FloatBetweenA
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I1FloatBetweenA.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1FloatBetweenA.RelationType, value);
			}
		}

		virtual public bool ExistI1FloatBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1FloatBetweenA.RelationType);
			}
		}

		virtual public void RemoveI1FloatBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.I1FloatBetweenA.RelationType);
		}


		virtual public global::System.Int32? I1IntegerLessThan
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I1IntegerLessThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1IntegerLessThan.RelationType, value);
			}
		}

		virtual public bool ExistI1IntegerLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1IntegerLessThan.RelationType);
			}
		}

		virtual public void RemoveI1IntegerLessThan()
		{
			Strategy.RemoveUnitRole(Meta.I1IntegerLessThan.RelationType);
		}


		virtual public global::System.Int32? I1AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I1AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistI1AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveI1AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsInteger.RelationType);
		}


		virtual public S2 I1S2one2one
		{
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.I1S2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1S2one2one.RelationType, value);
			}
		}

		virtual public bool ExistI1S2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1S2one2one.RelationType);
			}
		}

		virtual public void RemoveI1S2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1S2one2one.RelationType);
		}


		virtual public global::System.Boolean? I1AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.I1AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistI1AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveI1AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsBoolean.RelationType);
		}


		virtual public I1 I1I1many2one
		{
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.I1I1many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I1many2one.RelationType, value);
			}
		}

		virtual public bool ExistI1I1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I1many2one.RelationType);
			}
		}

		virtual public void RemoveI1I1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I1many2one.RelationType);
		}


		virtual public global::Allors.Extent<C1> I1C1many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1C1many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1C1many2manies.RelationType, value);
			}
		}

		virtual public void AddI1C1many2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.I1C1many2manies.RelationType, value);
		}

		virtual public void RemoveI1C1many2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1C1many2manies.RelationType, value);
		}

		virtual public bool ExistI1C1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1C1many2manies.RelationType);
			}
		}

		virtual public void RemoveI1C1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1C1many2manies.RelationType);
		}


		virtual public I2 I1I2one2one
		{
			get
			{
				return (I2) Strategy.GetCompositeRole(Meta.I1I2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I2one2one.RelationType, value);
			}
		}

		virtual public bool ExistI1I2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I2one2one.RelationType);
			}
		}

		virtual public void RemoveI1I2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I2one2one.RelationType);
		}


		virtual public global::System.Decimal? I1AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I1AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistI1AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveI1AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsDecimal.RelationType);
		}


		virtual public global::Allors.Extent<S1> I1S1many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1S1many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1S1many2manies.RelationType, value);
			}
		}

		virtual public void AddI1S1many2many (S1 value)
		{
			Strategy.AddCompositeRole(Meta.I1S1many2manies.RelationType, value);
		}

		virtual public void RemoveI1S1many2many (S1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1S1many2manies.RelationType, value);
		}

		virtual public bool ExistI1S1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1S1many2manies.RelationType);
			}
		}

		virtual public void RemoveI1S1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1S1many2manies.RelationType);
		}


		virtual public global::System.DateTime? I1DateTimeGreaterThan
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.I1DateTimeGreaterThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DateTimeGreaterThan.RelationType, value);
			}
		}

		virtual public bool ExistI1DateTimeGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DateTimeGreaterThan.RelationType);
			}
		}

		virtual public void RemoveI1DateTimeGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.I1DateTimeGreaterThan.RelationType);
		}


		virtual public global::Allors.Extent<I34> I1I34many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I34many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I34many2manies.RelationType, value);
			}
		}

		virtual public void AddI1I34many2many (I34 value)
		{
			Strategy.AddCompositeRole(Meta.I1I34many2manies.RelationType, value);
		}

		virtual public void RemoveI1I34many2many (I34 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I34many2manies.RelationType, value);
		}

		virtual public bool ExistI1I34many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I34many2manies.RelationType);
			}
		}

		virtual public void RemoveI1I34many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I34many2manies.RelationType);
		}


		virtual public I34 I1I34one2one
		{
			get
			{
				return (I34) Strategy.GetCompositeRole(Meta.I1I34one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I34one2one.RelationType, value);
			}
		}

		virtual public bool ExistI1I34one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I34one2one.RelationType);
			}
		}

		virtual public void RemoveI1I34one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I34one2one.RelationType);
		}


		virtual public global::Allors.Extent<I1> I1I1one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I1one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I1one2manies.RelationType, value);
			}
		}

		virtual public void AddI1I1one2many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.I1I1one2manies.RelationType, value);
		}

		virtual public void RemoveI1I1one2many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I1one2manies.RelationType, value);
		}

		virtual public bool ExistI1I1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I1one2manies.RelationType);
			}
		}

		virtual public void RemoveI1I1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I1one2manies.RelationType);
		}


		virtual public global::Allors.Extent<I1> I1I1many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I1many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I1many2manies.RelationType, value);
			}
		}

		virtual public void AddI1I1many2many (I1 value)
		{
			Strategy.AddCompositeRole(Meta.I1I1many2manies.RelationType, value);
		}

		virtual public void RemoveI1I1many2many (I1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I1many2manies.RelationType, value);
		}

		virtual public bool ExistI1I1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I1many2manies.RelationType);
			}
		}

		virtual public void RemoveI1I1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I1many2manies.RelationType);
		}


		virtual public global::Allors.Extent<S2> I1S2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1S2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1S2many2manies.RelationType, value);
			}
		}

		virtual public void AddI1S2many2many (S2 value)
		{
			Strategy.AddCompositeRole(Meta.I1S2many2manies.RelationType, value);
		}

		virtual public void RemoveI1S2many2many (S2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1S2many2manies.RelationType, value);
		}

		virtual public bool ExistI1S2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1S2many2manies.RelationType);
			}
		}

		virtual public void RemoveI1S2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1S2many2manies.RelationType);
		}


		virtual public global::Allors.Extent<I12> I1I12many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I12many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I12many2manies.RelationType, value);
			}
		}

		virtual public void AddI1I12many2many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.I1I12many2manies.RelationType, value);
		}

		virtual public void RemoveI1I12many2many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I12many2manies.RelationType, value);
		}

		virtual public bool ExistI1I12many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I12many2manies.RelationType);
			}
		}

		virtual public void RemoveI1I12many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I12many2manies.RelationType);
		}


		virtual public global::System.String I1StringEquals
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I1StringEquals.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1StringEquals.RelationType, value);
			}
		}

		virtual public bool ExistI1StringEquals{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1StringEquals.RelationType);
			}
		}

		virtual public void RemoveI1StringEquals()
		{
			Strategy.RemoveUnitRole(Meta.I1StringEquals.RelationType);
		}


		virtual public global::Allors.Extent<I12> I1I12one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1I12one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1I12one2manies.RelationType, value);
			}
		}

		virtual public void AddI1I12one2many (I12 value)
		{
			Strategy.AddCompositeRole(Meta.I1I12one2manies.RelationType, value);
		}

		virtual public void RemoveI1I12one2many (I12 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1I12one2manies.RelationType, value);
		}

		virtual public bool ExistI1I12one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1I12one2manies.RelationType);
			}
		}

		virtual public void RemoveI1I12one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1I12one2manies.RelationType);
		}


		virtual public global::Allors.Extent<S2> I1S2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1S2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1S2one2manies.RelationType, value);
			}
		}

		virtual public void AddI1S2one2many (S2 value)
		{
			Strategy.AddCompositeRole(Meta.I1S2one2manies.RelationType, value);
		}

		virtual public void RemoveI1S2one2many (S2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1S2one2manies.RelationType, value);
		}

		virtual public bool ExistI1S2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1S2one2manies.RelationType);
			}
		}

		virtual public void RemoveI1S2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1S2one2manies.RelationType);
		}


		virtual public global::Allors.Extent<C2> I1C2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1C2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1C2many2manies.RelationType, value);
			}
		}

		virtual public void AddI1C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I1C2many2manies.RelationType, value);
		}

		virtual public void RemoveI1C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1C2many2manies.RelationType, value);
		}

		virtual public bool ExistI1C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1C2many2manies.RelationType);
			}
		}

		virtual public void RemoveI1C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1C2many2manies.RelationType);
		}


		virtual public global::System.Byte[] I1AllorsBinary
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(Meta.I1AllorsBinary.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsBinary.RelationType, value);
			}
		}

		virtual public bool ExistI1AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsBinary.RelationType);
			}
		}

		virtual public void RemoveI1AllorsBinary()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsBinary.RelationType);
		}


		virtual public global::System.Decimal? I1DecimalBetweenB
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I1DecimalBetweenB.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DecimalBetweenB.RelationType, value);
			}
		}

		virtual public bool ExistI1DecimalBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DecimalBetweenB.RelationType);
			}
		}

		virtual public void RemoveI1DecimalBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.I1DecimalBetweenB.RelationType);
		}


		virtual public global::System.Double? I1FloatGreaterThan
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I1FloatGreaterThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1FloatGreaterThan.RelationType, value);
			}
		}

		virtual public bool ExistI1FloatGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1FloatGreaterThan.RelationType);
			}
		}

		virtual public void RemoveI1FloatGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.I1FloatGreaterThan.RelationType);
		}


		virtual public global::System.Int32? I1IntegerBetweenB
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I1IntegerBetweenB.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1IntegerBetweenB.RelationType, value);
			}
		}

		virtual public bool ExistI1IntegerBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1IntegerBetweenB.RelationType);
			}
		}

		virtual public void RemoveI1IntegerBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.I1IntegerBetweenB.RelationType);
		}


		virtual public global::System.DateTime? I1DateTimeBetweenA
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.I1DateTimeBetweenA.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DateTimeBetweenA.RelationType, value);
			}
		}

		virtual public bool ExistI1DateTimeBetweenA{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DateTimeBetweenA.RelationType);
			}
		}

		virtual public void RemoveI1DateTimeBetweenA()
		{
			Strategy.RemoveUnitRole(Meta.I1DateTimeBetweenA.RelationType);
		}


		virtual public global::System.Double? I1AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I1AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistI1AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveI1AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsDouble.RelationType);
		}


		virtual public global::Allors.Extent<S1> I1S1one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1S1one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1S1one2manies.RelationType, value);
			}
		}

		virtual public void AddI1S1one2many (S1 value)
		{
			Strategy.AddCompositeRole(Meta.I1S1one2manies.RelationType, value);
		}

		virtual public void RemoveI1S1one2many (S1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1S1one2manies.RelationType, value);
		}

		virtual public bool ExistI1S1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1S1one2manies.RelationType);
			}
		}

		virtual public void RemoveI1S1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1S1one2manies.RelationType);
		}


		virtual public I1 I1I1one2one
		{
			get
			{
				return (I1) Strategy.GetCompositeRole(Meta.I1I1one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1I1one2one.RelationType, value);
			}
		}

		virtual public bool ExistI1I1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1I1one2one.RelationType);
			}
		}

		virtual public void RemoveI1I1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1I1one2one.RelationType);
		}


		virtual public global::System.Int32? I1IntegerGreaterThan
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I1IntegerGreaterThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1IntegerGreaterThan.RelationType, value);
			}
		}

		virtual public bool ExistI1IntegerGreaterThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1IntegerGreaterThan.RelationType);
			}
		}

		virtual public void RemoveI1IntegerGreaterThan()
		{
			Strategy.RemoveUnitRole(Meta.I1IntegerGreaterThan.RelationType);
		}


		virtual public S1 I1S1many2one
		{
			get
			{
				return (S1) Strategy.GetCompositeRole(Meta.I1S1many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1S1many2one.RelationType, value);
			}
		}

		virtual public bool ExistI1S1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1S1many2one.RelationType);
			}
		}

		virtual public void RemoveI1S1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1S1many2one.RelationType);
		}


		virtual public global::System.Double? I1FloatBetweenB
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I1FloatBetweenB.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1FloatBetweenB.RelationType, value);
			}
		}

		virtual public bool ExistI1FloatBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1FloatBetweenB.RelationType);
			}
		}

		virtual public void RemoveI1FloatBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.I1FloatBetweenB.RelationType);
		}


		virtual public global::System.Decimal? I1DecimalLessThan
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I1DecimalLessThan.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DecimalLessThan.RelationType, value);
			}
		}

		virtual public bool ExistI1DecimalLessThan{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DecimalLessThan.RelationType);
			}
		}

		virtual public void RemoveI1DecimalLessThan()
		{
			Strategy.RemoveUnitRole(Meta.I1DecimalLessThan.RelationType);
		}


		virtual public global::System.DateTime? I1DateTimeBetweenB
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.I1DateTimeBetweenB.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1DateTimeBetweenB.RelationType, value);
			}
		}

		virtual public bool ExistI1DateTimeBetweenB{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1DateTimeBetweenB.RelationType);
			}
		}

		virtual public void RemoveI1DateTimeBetweenB()
		{
			Strategy.RemoveUnitRole(Meta.I1DateTimeBetweenB.RelationType);
		}


		virtual public global::System.Guid? I1AllorsUnique
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(Meta.I1AllorsUnique.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I1AllorsUnique.RelationType, value);
			}
		}

		virtual public bool ExistI1AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(Meta.I1AllorsUnique.RelationType);
			}
		}

		virtual public void RemoveI1AllorsUnique()
		{
			Strategy.RemoveUnitRole(Meta.I1AllorsUnique.RelationType);
		}


		virtual public global::Allors.Extent<C1> I1C1one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I1C1one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I1C1one2manies.RelationType, value);
			}
		}

		virtual public void AddI1C1one2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.I1C1one2manies.RelationType, value);
		}

		virtual public void RemoveI1C1one2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.I1C1one2manies.RelationType, value);
		}

		virtual public bool ExistI1C1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I1C1one2manies.RelationType);
			}
		}

		virtual public void RemoveI1C1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I1C1one2manies.RelationType);
		}


		virtual public S2 I1S2many2one
		{
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.I1S2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I1S2many2one.RelationType, value);
			}
		}

		virtual public bool ExistI1S2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I1S2many2one.RelationType);
			}
		}

		virtual public void RemoveI1S2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I1S2many2one.RelationType);
		}


		virtual public global::System.Decimal? S1AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.S1AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistS1AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveS1AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsDecimal.RelationType);
		}


		virtual public global::System.Int32? S1AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.S1AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistS1AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveS1AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsInteger.RelationType);
		}


		virtual public global::System.Byte[] S1AllorsBinary
		{
			get
			{
				return (global::System.Byte[]) Strategy.GetUnitRole(Meta.S1AllorsBinary.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsBinary.RelationType, value);
			}
		}

		virtual public bool ExistS1AllorsBinary{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsBinary.RelationType);
			}
		}

		virtual public void RemoveS1AllorsBinary()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsBinary.RelationType);
		}


		virtual public global::System.Guid? S1AllorsUnique
		{
			get
			{
				return (global::System.Guid?) Strategy.GetUnitRole(Meta.S1AllorsUnique.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsUnique.RelationType, value);
			}
		}

		virtual public bool ExistS1AllorsUnique{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsUnique.RelationType);
			}
		}

		virtual public void RemoveS1AllorsUnique()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsUnique.RelationType);
		}


		virtual public global::System.String S1StringLarge
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S1StringLarge.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1StringLarge.RelationType, value);
			}
		}

		virtual public bool ExistS1StringLarge{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1StringLarge.RelationType);
			}
		}

		virtual public void RemoveS1StringLarge()
		{
			Strategy.RemoveUnitRole(Meta.S1StringLarge.RelationType);
		}


		virtual public S2 S1S2many2one
		{
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.S1S2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1S2many2one.RelationType, value);
			}
		}

		virtual public bool ExistS1S2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1S2many2one.RelationType);
			}
		}

		virtual public void RemoveS1S2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1S2many2one.RelationType);
		}


		virtual public global::Allors.Extent<S2> S1S2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1S2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1S2one2manies.RelationType, value);
			}
		}

		virtual public void AddS1S2one2many (S2 value)
		{
			Strategy.AddCompositeRole(Meta.S1S2one2manies.RelationType, value);
		}

		virtual public void RemoveS1S2one2many (S2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1S2one2manies.RelationType, value);
		}

		virtual public bool ExistS1S2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1S2one2manies.RelationType);
			}
		}

		virtual public void RemoveS1S2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1S2one2manies.RelationType);
		}


		virtual public global::System.Double? S1AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.S1AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistS1AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveS1AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsDouble.RelationType);
		}


		virtual public global::System.String S1AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S1AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistS1AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsString.RelationType);
			}
		}

		virtual public void RemoveS1AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsString.RelationType);
		}


		virtual public C1 S1C1many2one
		{
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.S1C1many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1C1many2one.RelationType, value);
			}
		}

		virtual public bool ExistS1C1many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1C1many2one.RelationType);
			}
		}

		virtual public void RemoveS1C1many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1C1many2one.RelationType);
		}


		virtual public C1 S1C1one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.S1C1one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1C1one2one.RelationType, value);
			}
		}

		virtual public bool ExistS1C1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1C1one2one.RelationType);
			}
		}

		virtual public void RemoveS1C1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1C1one2one.RelationType);
		}


		virtual public global::System.Boolean? S1AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.S1AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistS1AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveS1AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsBoolean.RelationType);
		}


		virtual public global::Allors.Extent<C1> S1C1many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1C1many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1C1many2manies.RelationType, value);
			}
		}

		virtual public void AddS1C1many2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.S1C1many2manies.RelationType, value);
		}

		virtual public void RemoveS1C1many2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1C1many2manies.RelationType, value);
		}

		virtual public bool ExistS1C1many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1C1many2manies.RelationType);
			}
		}

		virtual public void RemoveS1C1many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1C1many2manies.RelationType);
		}


		virtual public global::Allors.Extent<S2> S1S2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1S2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1S2many2manies.RelationType, value);
			}
		}

		virtual public void AddS1S2many2many (S2 value)
		{
			Strategy.AddCompositeRole(Meta.S1S2many2manies.RelationType, value);
		}

		virtual public void RemoveS1S2many2many (S2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1S2many2manies.RelationType, value);
		}

		virtual public bool ExistS1S2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1S2many2manies.RelationType);
			}
		}

		virtual public void RemoveS1S2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1S2many2manies.RelationType);
		}


		virtual public S2 S1S2one2one
		{
			get
			{
				return (S2) Strategy.GetCompositeRole(Meta.S1S2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1S2one2one.RelationType, value);
			}
		}

		virtual public bool ExistS1S2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1S2one2one.RelationType);
			}
		}

		virtual public void RemoveS1S2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1S2one2one.RelationType);
		}


		virtual public global::System.DateTime? S1AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.S1AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistS1AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveS1AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.S1AllorsDateTime.RelationType);
		}


		virtual public global::Allors.Extent<C1> S1C1one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1C1one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1C1one2manies.RelationType, value);
			}
		}

		virtual public void AddS1C1one2many (C1 value)
		{
			Strategy.AddCompositeRole(Meta.S1C1one2manies.RelationType, value);
		}

		virtual public void RemoveS1C1one2many (C1 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1C1one2manies.RelationType, value);
		}

		virtual public bool ExistS1C1one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1C1one2manies.RelationType);
			}
		}

		virtual public void RemoveS1C1one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1C1one2manies.RelationType);
		}


		virtual public global::System.String Name
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Name.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Name.RelationType, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(Meta.Name.RelationType);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(Meta.Name.RelationType);
		}


		virtual public global::System.Double? S1234AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.S1234AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDouble.RelationType);
		}


		virtual public global::System.Decimal? S1234AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.S1234AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDecimal.RelationType);
		}


		virtual public global::System.Int32? S1234AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.S1234AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsInteger.RelationType);
		}


		virtual public S1234 S1234many2one
		{
			get
			{
				return (S1234) Strategy.GetCompositeRole(Meta.S1234many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234many2one.RelationType, value);
			}
		}

		virtual public bool ExistS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234many2one.RelationType);
			}
		}

		virtual public void RemoveS1234many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234many2one.RelationType);
		}


		virtual public C2 S1234C2one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S1234C2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234C2one2one.RelationType, value);
			}
		}

		virtual public bool ExistS1234C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234C2one2one.RelationType);
			}
		}

		virtual public void RemoveS1234C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2one2one.RelationType);
		}


		virtual public global::Allors.Extent<C2> S1234C2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234C2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234C2many2manies.RelationType, value);
			}
		}

		virtual public void AddS1234C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S1234C2many2manies.RelationType, value);
		}

		virtual public void RemoveS1234C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2many2manies.RelationType, value);
		}

		virtual public bool ExistS1234C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234C2many2manies.RelationType);
			}
		}

		virtual public void RemoveS1234C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234C2many2manies.RelationType);
		}


		virtual public global::Allors.Extent<S1234> S1234one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234one2manies.RelationType, value);
			}
		}

		virtual public void AddS1234one2many (S1234 value)
		{
			Strategy.AddCompositeRole(Meta.S1234one2manies.RelationType, value);
		}

		virtual public void RemoveS1234one2many (S1234 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234one2manies.RelationType, value);
		}

		virtual public bool ExistS1234one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234one2manies.RelationType);
			}
		}

		virtual public void RemoveS1234one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234one2manies.RelationType);
		}


		virtual public global::Allors.Extent<C2> S1234C2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234C2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234C2one2manies.RelationType, value);
			}
		}

		virtual public void AddS1234C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S1234C2one2manies.RelationType, value);
		}

		virtual public void RemoveS1234C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2one2manies.RelationType, value);
		}

		virtual public bool ExistS1234C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234C2one2manies.RelationType);
			}
		}

		virtual public void RemoveS1234C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234C2one2manies.RelationType);
		}


		virtual public global::Allors.Extent<S1234> S1234many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234many2manies.RelationType, value);
			}
		}

		virtual public void AddS1234many2many (S1234 value)
		{
			Strategy.AddCompositeRole(Meta.S1234many2manies.RelationType, value);
		}

		virtual public void RemoveS1234many2many (S1234 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234many2manies.RelationType, value);
		}

		virtual public bool ExistS1234many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234many2manies.RelationType);
			}
		}

		virtual public void RemoveS1234many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234many2manies.RelationType);
		}


		virtual public global::System.String ClassName
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.ClassName.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ClassName.RelationType, value);
			}
		}

		virtual public bool ExistClassName{
			get
			{
				return Strategy.ExistUnitRole(Meta.ClassName.RelationType);
			}
		}

		virtual public void RemoveClassName()
		{
			Strategy.RemoveUnitRole(Meta.ClassName.RelationType);
		}


		virtual public global::System.DateTime? S1234AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.S1234AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDateTime.RelationType);
		}


		virtual public S1234 S1234one2one
		{
			get
			{
				return (S1234) Strategy.GetCompositeRole(Meta.S1234one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234one2one.RelationType, value);
			}
		}

		virtual public bool ExistS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234one2one.RelationType);
			}
		}

		virtual public void RemoveS1234one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234one2one.RelationType);
		}


		virtual public C2 S1234C2many2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S1234C2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234C2many2one.RelationType, value);
			}
		}

		virtual public bool ExistS1234C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234C2many2one.RelationType);
			}
		}

		virtual public void RemoveS1234C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2many2one.RelationType);
		}


		virtual public global::System.String S1234AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S1234AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsString.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsString.RelationType);
		}


		virtual public global::System.Boolean? S1234AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.S1234AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsBoolean.RelationType);
		}


		virtual public global::System.Boolean? I12AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.I12AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistI12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveI12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsBoolean.RelationType);
		}


		virtual public global::System.Int32? I12AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I12AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistI12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveI12AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsInteger.RelationType);
		}


		virtual public global::Allors.Extent<I34> I12I34one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I34one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I34one2manies.RelationType, value);
			}
		}

		virtual public void AddI12I34one2many (I34 value)
		{
			Strategy.AddCompositeRole(Meta.I12I34one2manies.RelationType, value);
		}

		virtual public void RemoveI12I34one2many (I34 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I34one2manies.RelationType, value);
		}

		virtual public bool ExistI12I34one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I34one2manies.RelationType);
			}
		}

		virtual public void RemoveI12I34one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I34one2manies.RelationType);
		}


		virtual public C3 C3many2one
		{
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.C3many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3many2one.RelationType, value);
			}
		}

		virtual public bool ExistC3many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3many2one.RelationType);
			}
		}

		virtual public void RemoveC3many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C3many2one.RelationType);
		}


		virtual public C2 I12C2many2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I12C2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C2many2one.RelationType, value);
			}
		}

		virtual public bool ExistI12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C2many2one.RelationType);
			}
		}

		virtual public void RemoveI12C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12C2many2one.RelationType);
		}


		virtual public global::System.Double? I12AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I12AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistI12AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveI12AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsDouble.RelationType);
		}


		virtual public I34 I12I34many2one
		{
			get
			{
				return (I34) Strategy.GetCompositeRole(Meta.I12I34many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I34many2one.RelationType, value);
			}
		}

		virtual public bool ExistI12I34many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I34many2one.RelationType);
			}
		}

		virtual public void RemoveI12I34many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12I34many2one.RelationType);
		}


		virtual public global::Allors.Extent<I34> I12I34many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12I34many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12I34many2manies.RelationType, value);
			}
		}

		virtual public void AddI12I34many2many (I34 value)
		{
			Strategy.AddCompositeRole(Meta.I12I34many2manies.RelationType, value);
		}

		virtual public void RemoveI12I34many2many (I34 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12I34many2manies.RelationType, value);
		}

		virtual public bool ExistI12I34many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12I34many2manies.RelationType);
			}
		}

		virtual public void RemoveI12I34many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12I34many2manies.RelationType);
		}


		virtual public C3 I12C3one2one
		{
			get
			{
				return (C3) Strategy.GetCompositeRole(Meta.I12C3one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C3one2one.RelationType, value);
			}
		}

		virtual public bool ExistI12C3one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C3one2one.RelationType);
			}
		}

		virtual public void RemoveI12C3one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12C3one2one.RelationType);
		}


		virtual public global::Allors.Extent<C2> I12C2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C2many2manies.RelationType, value);
			}
		}

		virtual public void AddI12C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I12C2many2manies.RelationType, value);
		}

		virtual public void RemoveI12C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C2many2manies.RelationType, value);
		}

		virtual public bool ExistI12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C2many2manies.RelationType);
			}
		}

		virtual public void RemoveI12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C2many2manies.RelationType);
		}


		virtual public global::System.Decimal? I12AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I12AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistI12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveI12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsDecimal.RelationType);
		}


		virtual public C2 I12C2one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.I12C2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12C2one2one.RelationType, value);
			}
		}

		virtual public bool ExistI12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12C2one2one.RelationType);
			}
		}

		virtual public void RemoveI12C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12C2one2one.RelationType);
		}


		virtual public global::Allors.Extent<C3> I12C3one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C3one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C3one2manies.RelationType, value);
			}
		}

		virtual public void AddI12C3one2many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.I12C3one2manies.RelationType, value);
		}

		virtual public void RemoveI12C3one2many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C3one2manies.RelationType, value);
		}

		virtual public bool ExistI12C3one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C3one2manies.RelationType);
			}
		}

		virtual public void RemoveI12C3one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C3one2manies.RelationType);
		}


		virtual public global::Allors.Extent<C3> I12C3many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C3many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C3many2manies.RelationType, value);
			}
		}

		virtual public void AddI12C3many2many (C3 value)
		{
			Strategy.AddCompositeRole(Meta.I12C3many2manies.RelationType, value);
		}

		virtual public void RemoveI12C3many2many (C3 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C3many2manies.RelationType, value);
		}

		virtual public bool ExistI12C3many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C3many2manies.RelationType);
			}
		}

		virtual public void RemoveI12C3many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C3many2manies.RelationType);
		}


		virtual public global::System.String PrefetchTest
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.PrefetchTest.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.PrefetchTest.RelationType, value);
			}
		}

		virtual public bool ExistPrefetchTest{
			get
			{
				return Strategy.ExistUnitRole(Meta.PrefetchTest.RelationType);
			}
		}

		virtual public void RemovePrefetchTest()
		{
			Strategy.RemoveUnitRole(Meta.PrefetchTest.RelationType);
		}


		virtual public global::System.DateTime? I12AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.I12AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistI12AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveI12AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsDateTime.RelationType);
		}


		virtual public global::System.String I12AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I12AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I12AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistI12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I12AllorsString.RelationType);
			}
		}

		virtual public void RemoveI12AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I12AllorsString.RelationType);
		}


		virtual public I34 I12I34one2one
		{
			get
			{
				return (I34) Strategy.GetCompositeRole(Meta.I12I34one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I12I34one2one.RelationType, value);
			}
		}

		virtual public bool ExistI12I34one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I12I34one2one.RelationType);
			}
		}

		virtual public void RemoveI12I34one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I12I34one2one.RelationType);
		}


		virtual public global::Allors.Extent<C2> I12C2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I12C2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I12C2one2manies.RelationType, value);
			}
		}

		virtual public void AddI12C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.I12C2one2manies.RelationType, value);
		}

		virtual public void RemoveI12C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.I12C2one2manies.RelationType, value);
		}

		virtual public bool ExistI12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I12C2one2manies.RelationType);
			}
		}

		virtual public void RemoveI12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I12C2one2manies.RelationType);
		}


		virtual public global::System.String S12AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S12AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistS12AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsString.RelationType);
			}
		}

		virtual public void RemoveS12AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsString.RelationType);
		}


		virtual public global::System.DateTime? S12AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.S12AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistS12AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveS12AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsDateTime.RelationType);
		}


		virtual public global::Allors.Extent<C2> S12C2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S12C2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S12C2many2manies.RelationType, value);
			}
		}

		virtual public void AddS12C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S12C2many2manies.RelationType, value);
		}

		virtual public void RemoveS12C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S12C2many2manies.RelationType, value);
		}

		virtual public bool ExistS12C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S12C2many2manies.RelationType);
			}
		}

		virtual public void RemoveS12C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S12C2many2manies.RelationType);
		}


		virtual public C2 S12C2many2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S12C2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S12C2many2one.RelationType, value);
			}
		}

		virtual public bool ExistS12C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S12C2many2one.RelationType);
			}
		}

		virtual public void RemoveS12C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S12C2many2one.RelationType);
		}


		virtual public C2 S12C2one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S12C2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S12C2one2one.RelationType, value);
			}
		}

		virtual public bool ExistS12C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S12C2one2one.RelationType);
			}
		}

		virtual public void RemoveS12C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S12C2one2one.RelationType);
		}


		virtual public global::Allors.Extent<C2> S12C2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S12C2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S12C2one2manies.RelationType, value);
			}
		}

		virtual public void AddS12C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S12C2one2manies.RelationType, value);
		}

		virtual public void RemoveS12C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S12C2one2manies.RelationType, value);
		}

		virtual public bool ExistS12C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S12C2one2manies.RelationType);
			}
		}

		virtual public void RemoveS12C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S12C2one2manies.RelationType);
		}


		virtual public global::System.Boolean? S12AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.S12AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistS12AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveS12AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsBoolean.RelationType);
		}


		virtual public global::System.Double? S12AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.S12AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistS12AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveS12AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsDouble.RelationType);
		}


		virtual public global::System.Int32? S12AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.S12AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistS12AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveS12AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsInteger.RelationType);
		}


		virtual public global::System.Decimal? S12AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.S12AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S12AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistS12AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S12AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveS12AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S12AllorsDecimal.RelationType);
		}



		virtual public global::Allors.Extent<C1> C1sWhereC1C1many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1C1many2one.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1C1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1C1many2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereMany2One
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereMany2One.RelationType);
			}
		}

		virtual public bool ExistC1sWhereMany2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereMany2One.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1C1many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1C1many2many.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1C1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1C1many2many.RelationType);
			}
		}


		virtual public C1 C1WhereC1C1one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1C1one2one.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1C1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1C1one2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1C1one2many
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1C1one2many.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1C1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1C1one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereC1many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereC1many2many.RelationType);
			}
		}

		virtual public bool ExistC2sWhereC1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereC1many2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereC1many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereC1many2one.RelationType);
			}
		}

		virtual public bool ExistC2sWhereC1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereC1many2one.RelationType);
			}
		}


		virtual public C2 C2WhereC1one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereC1one2one.RelationType);
			}
		}

		virtual public bool ExistC2WhereC1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereC1one2one.RelationType);
			}
		}


		virtual public C2 C2WhereC1one2many
		{
			get
			{
				return (C2) Strategy.GetCompositeAssociation(Meta.C2WhereC1one2many.RelationType);
			}
		}

		virtual public bool ExistC2WhereC1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C2WhereC1one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1C1many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1C1many2one.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1C1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1C1many2one.RelationType);
			}
		}


		virtual public I1 I1WhereI1C1one2one
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1C1one2one.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1C1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1C1one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1C1many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1C1many2many.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1C1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1C1many2many.RelationType);
			}
		}


		virtual public I1 I1WhereI1C1one2many
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1C1one2many.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1C1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1C1one2many.RelationType);
			}
		}


		virtual public I3 I3WhereC1one2one
		{
			get
			{
				return (I3) Strategy.GetCompositeAssociation(Meta.I3WhereC1one2one.RelationType);
			}
		}

		virtual public bool ExistI3WhereC1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I3WhereC1one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<S1> S1sWhereS1C1many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1sWhereS1C1many2one.RelationType);
			}
		}

		virtual public bool ExistS1sWhereS1C1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1sWhereS1C1many2one.RelationType);
			}
		}


		virtual public S1 S1WhereS1C1one2one
		{
			get
			{
				return (S1) Strategy.GetCompositeAssociation(Meta.S1WhereS1C1one2one.RelationType);
			}
		}

		virtual public bool ExistS1WhereS1C1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1WhereS1C1one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<S1> S1sWhereS1C1many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1sWhereS1C1many2many.RelationType);
			}
		}

		virtual public bool ExistS1sWhereS1C1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1sWhereS1C1many2many.RelationType);
			}
		}


		virtual public S1 S1WhereS1C1one2many
		{
			get
			{
				return (S1) Strategy.GetCompositeAssociation(Meta.S1WhereS1C1one2many.RelationType);
			}
		}

		virtual public bool ExistS1WhereS1C1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1WhereS1C1one2many.RelationType);
			}
		}


		virtual public C1 C1WhereC1I1one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1I1one2one.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1I1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1I1one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1I1many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1I1many2many.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1I1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1I1many2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1I1many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1I1many2one.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1I1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1I1many2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1I1one2many
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1I1one2many.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1I1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1I1one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1I1many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1I1many2one.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1I1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1I1many2one.RelationType);
			}
		}


		virtual public I1 I1WhereI1I1one2many
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1I1one2many.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1I1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1I1one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1I1many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1I1many2many.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1I1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1I1many2many.RelationType);
			}
		}


		virtual public I1 I1WhereI1I1one2one
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1I1one2one.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1I1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1I1one2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1S1one2many
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1S1one2many.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1S1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1S1one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1S1many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1S1many2many.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1S1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1S1many2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1S1many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1S1many2one.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1S1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1S1many2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1S1one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1S1one2one.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1S1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1S1one2one.RelationType);
			}
		}


		virtual public I1 I1WhereI1S1one2one
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1S1one2one.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1S1one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1S1one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1S1many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1S1many2many.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1S1many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1S1many2many.RelationType);
			}
		}


		virtual public I1 I1WhereI1S1one2many
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1S1one2many.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1S1one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1S1one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1S1many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1S1many2one.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1S1many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1S1many2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereS1234many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereS1234many2one.RelationType);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereS1234many2one.RelationType);
			}
		}


		virtual public S1234 S1234WhereS1234one2many
		{
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereS1234one2many.RelationType);
			}
		}

		virtual public bool ExistS1234WhereS1234one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereS1234one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereS1234many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereS1234many2many.RelationType);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereS1234many2many.RelationType);
			}
		}


		virtual public S1234 S1234WhereS1234one2one
		{
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereS1234one2one.RelationType);
			}
		}

		virtual public bool ExistS1234WhereS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereS1234one2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1I12one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1I12one2one.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1I12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1I12one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1I12many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1I12many2one.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1I12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1I12many2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1I12one2many
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1I12one2many.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1I12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1I12one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1I12many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1I12many2many.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1I12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1I12many2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1I12many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1I12many2one.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1I12many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1I12many2one.RelationType);
			}
		}


		virtual public I1 I1WhereI1I12one2one
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1I12one2one.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1I12one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1I12one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1I12many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1I12many2many.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1I12many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1I12many2many.RelationType);
			}
		}


		virtual public I1 I1WhereI1I12one2many
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1I12one2many.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1I12one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1I12one2many.RelationType);
			}
		}


        #region Test Helpers
        public static C1 Create(ISession session) => (C1)session.Create(session.Database.State().M.C1.ObjectType);

        public static C1[] Create(ISession session, int count) => (C1[])session.Create(session.Database.State().M.C1.ObjectType, count);

        public static C1 Instantiate(ISession session, long id) => (C1)session.Instantiate(id);

        public static C1[] Instantiate(ISession session, string[] ids) => (C1[])session.Instantiate(ids);

        public static C1[] Extent(ISession session) => (C1[])session.Extent(session.Database.State().M.C1.ObjectType).ToArray();
        #endregion
	}
}