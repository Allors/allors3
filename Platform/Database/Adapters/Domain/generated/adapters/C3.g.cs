// Allors generated file.
// Do not edit this file, changes will be overwritten.
namespace Allors.Domain
{
	public partial class C3 : Allors.IObject , I3, I23, I34
	{
		private readonly IStrategy strategy;
		private readonly Allors.Meta.M m;

		public C3(Allors.IStrategy strategy)
		{
			this.strategy = strategy;
			this.m = this.DatabaseState().M;
		}

		public Allors.Meta.M M => m;

		public Allors.Meta.MetaC3 Meta => m.C3;

		public long Id
		{
			get { return this.strategy.ObjectId; }
		}

		public IStrategy Strategy
        {
            [System.Diagnostics.DebuggerStepThrough]
            get { return this.strategy; }
        }

		public static C3 Instantiate (Allors.ISession allorsSession, string allorsObjectId)
		{
			return (C3) allorsSession.Instantiate(allorsObjectId);
		}

		public override bool Equals(object obj)
        {
            var typedObj = obj as IObject;
            return typedObj != null &&
                   typedObj.Strategy.ObjectId.Equals(this.Strategy.ObjectId) &&
                   typedObj.Strategy.Session.Database.Id.Equals(this.Strategy.Session.Database.Id);
        }

		public override int GetHashCode()
        {
            return this.Strategy.ObjectId.GetHashCode();
        }



		virtual public global::System.String C3AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.C3AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C3AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistC3AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.C3AllorsString.RelationType);
			}
		}

		virtual public void RemoveC3AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.C3AllorsString.RelationType);
		}


		virtual public global::Allors.Extent<C2> C3C2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C3C2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C3C2many2manies.RelationType, value);
			}
		}

		virtual public void AddC3C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.C3C2many2manies.RelationType, value);
		}

		virtual public void RemoveC3C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C3C2many2manies.RelationType, value);
		}

		virtual public bool ExistC3C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C3C2many2manies.RelationType);
			}
		}

		virtual public void RemoveC3C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C3C2many2manies.RelationType);
		}


		virtual public I4 C3I4one2one
		{
			get
			{
				return (I4) Strategy.GetCompositeRole(Meta.C3I4one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3I4one2one.RelationType, value);
			}
		}

		virtual public bool ExistC3I4one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3I4one2one.RelationType);
			}
		}

		virtual public void RemoveC3I4one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C3I4one2one.RelationType);
		}


		virtual public C4 C3C4many2one
		{
			get
			{
				return (C4) Strategy.GetCompositeRole(Meta.C3C4many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3C4many2one.RelationType, value);
			}
		}

		virtual public bool ExistC3C4many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3C4many2one.RelationType);
			}
		}

		virtual public void RemoveC3C4many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C3C4many2one.RelationType);
		}


		virtual public global::Allors.Extent<C4> C3C4many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C3C4many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C3C4many2manies.RelationType, value);
			}
		}

		virtual public void AddC3C4many2many (C4 value)
		{
			Strategy.AddCompositeRole(Meta.C3C4many2manies.RelationType, value);
		}

		virtual public void RemoveC3C4many2many (C4 value)
		{
			Strategy.RemoveCompositeRole(Meta.C3C4many2manies.RelationType, value);
		}

		virtual public bool ExistC3C4many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C3C4many2manies.RelationType);
			}
		}

		virtual public void RemoveC3C4many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C3C4many2manies.RelationType);
		}


		virtual public global::Allors.Extent<I4> C3I4many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C3I4many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C3I4many2manies.RelationType, value);
			}
		}

		virtual public void AddC3I4many2many (I4 value)
		{
			Strategy.AddCompositeRole(Meta.C3I4many2manies.RelationType, value);
		}

		virtual public void RemoveC3I4many2many (I4 value)
		{
			Strategy.RemoveCompositeRole(Meta.C3I4many2manies.RelationType, value);
		}

		virtual public bool ExistC3I4many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C3I4many2manies.RelationType);
			}
		}

		virtual public void RemoveC3I4many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C3I4many2manies.RelationType);
		}


		virtual public global::Allors.Extent<C2> C3C2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C3C2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C3C2one2manies.RelationType, value);
			}
		}

		virtual public void AddC3C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.C3C2one2manies.RelationType, value);
		}

		virtual public void RemoveC3C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.C3C2one2manies.RelationType, value);
		}

		virtual public bool ExistC3C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C3C2one2manies.RelationType);
			}
		}

		virtual public void RemoveC3C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C3C2one2manies.RelationType);
		}


		virtual public C2 C3C2many2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.C3C2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3C2many2one.RelationType, value);
			}
		}

		virtual public bool ExistC3C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3C2many2one.RelationType);
			}
		}

		virtual public void RemoveC3C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C3C2many2one.RelationType);
		}


		virtual public I4 C3I4many2one
		{
			get
			{
				return (I4) Strategy.GetCompositeRole(Meta.C3I4many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3I4many2one.RelationType, value);
			}
		}

		virtual public bool ExistC3I4many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3I4many2one.RelationType);
			}
		}

		virtual public void RemoveC3I4many2one()
		{
			Strategy.RemoveCompositeRole(Meta.C3I4many2one.RelationType);
		}


		virtual public global::Allors.Extent<C4> C3C4one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C3C4one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C3C4one2manies.RelationType, value);
			}
		}

		virtual public void AddC3C4one2many (C4 value)
		{
			Strategy.AddCompositeRole(Meta.C3C4one2manies.RelationType, value);
		}

		virtual public void RemoveC3C4one2many (C4 value)
		{
			Strategy.RemoveCompositeRole(Meta.C3C4one2manies.RelationType, value);
		}

		virtual public bool ExistC3C4one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C3C4one2manies.RelationType);
			}
		}

		virtual public void RemoveC3C4one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C3C4one2manies.RelationType);
		}


		virtual public C2 C3C2one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.C3C2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3C2one2one.RelationType, value);
			}
		}

		virtual public bool ExistC3C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3C2one2one.RelationType);
			}
		}

		virtual public void RemoveC3C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C3C2one2one.RelationType);
		}


		virtual public C4 C3C4one2one
		{
			get
			{
				return (C4) Strategy.GetCompositeRole(Meta.C3C4one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C3C4one2one.RelationType, value);
			}
		}

		virtual public bool ExistC3C4one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C3C4one2one.RelationType);
			}
		}

		virtual public void RemoveC3C4one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C3C4one2one.RelationType);
		}


		virtual public global::System.String C3StringEquals
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.C3StringEquals.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.C3StringEquals.RelationType, value);
			}
		}

		virtual public bool ExistC3StringEquals{
			get
			{
				return Strategy.ExistUnitRole(Meta.C3StringEquals.RelationType);
			}
		}

		virtual public void RemoveC3StringEquals()
		{
			Strategy.RemoveUnitRole(Meta.C3StringEquals.RelationType);
		}


		virtual public global::Allors.Extent<I4> C3I4one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.C3I4one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.C3I4one2manies.RelationType, value);
			}
		}

		virtual public void AddC3I4one2many (I4 value)
		{
			Strategy.AddCompositeRole(Meta.C3I4one2manies.RelationType, value);
		}

		virtual public void RemoveC3I4one2many (I4 value)
		{
			Strategy.RemoveCompositeRole(Meta.C3I4one2manies.RelationType, value);
		}

		virtual public bool ExistC3I4one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.C3I4one2manies.RelationType);
			}
		}

		virtual public void RemoveC3I4one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.C3I4one2manies.RelationType);
		}


		virtual public global::Allors.Extent<C4> I3C4many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I3C4many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I3C4many2manies.RelationType, value);
			}
		}

		virtual public void AddI3C4many2many (C4 value)
		{
			Strategy.AddCompositeRole(Meta.I3C4many2manies.RelationType, value);
		}

		virtual public void RemoveI3C4many2many (C4 value)
		{
			Strategy.RemoveCompositeRole(Meta.I3C4many2manies.RelationType, value);
		}

		virtual public bool ExistI3C4many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I3C4many2manies.RelationType);
			}
		}

		virtual public void RemoveI3C4many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I3C4many2manies.RelationType);
		}


		virtual public global::System.String I3AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I3AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I3AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistI3AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I3AllorsString.RelationType);
			}
		}

		virtual public void RemoveI3AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I3AllorsString.RelationType);
		}


		virtual public global::Allors.Extent<I4> I3I4one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I3I4one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I3I4one2manies.RelationType, value);
			}
		}

		virtual public void AddI3I4one2many (I4 value)
		{
			Strategy.AddCompositeRole(Meta.I3I4one2manies.RelationType, value);
		}

		virtual public void RemoveI3I4one2many (I4 value)
		{
			Strategy.RemoveCompositeRole(Meta.I3I4one2manies.RelationType, value);
		}

		virtual public bool ExistI3I4one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I3I4one2manies.RelationType);
			}
		}

		virtual public void RemoveI3I4one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I3I4one2manies.RelationType);
		}


		virtual public global::Allors.Extent<C4> I3C4one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I3C4one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I3C4one2manies.RelationType, value);
			}
		}

		virtual public void AddI3C4one2many (C4 value)
		{
			Strategy.AddCompositeRole(Meta.I3C4one2manies.RelationType, value);
		}

		virtual public void RemoveI3C4one2many (C4 value)
		{
			Strategy.RemoveCompositeRole(Meta.I3C4one2manies.RelationType, value);
		}

		virtual public bool ExistI3C4one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I3C4one2manies.RelationType);
			}
		}

		virtual public void RemoveI3C4one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I3C4one2manies.RelationType);
		}


		virtual public global::Allors.Extent<I4> I3I4many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.I3I4many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.I3I4many2manies.RelationType, value);
			}
		}

		virtual public void AddI3I4many2many (I4 value)
		{
			Strategy.AddCompositeRole(Meta.I3I4many2manies.RelationType, value);
		}

		virtual public void RemoveI3I4many2many (I4 value)
		{
			Strategy.RemoveCompositeRole(Meta.I3I4many2manies.RelationType, value);
		}

		virtual public bool ExistI3I4many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.I3I4many2manies.RelationType);
			}
		}

		virtual public void RemoveI3I4many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.I3I4many2manies.RelationType);
		}


		virtual public I4 I3I4many2one
		{
			get
			{
				return (I4) Strategy.GetCompositeRole(Meta.I3I4many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I3I4many2one.RelationType, value);
			}
		}

		virtual public bool ExistI3I4many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I3I4many2one.RelationType);
			}
		}

		virtual public void RemoveI3I4many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I3I4many2one.RelationType);
		}


		virtual public C4 I3C4one2one
		{
			get
			{
				return (C4) Strategy.GetCompositeRole(Meta.I3C4one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I3C4one2one.RelationType, value);
			}
		}

		virtual public bool ExistI3C4one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I3C4one2one.RelationType);
			}
		}

		virtual public void RemoveI3C4one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I3C4one2one.RelationType);
		}


		virtual public I4 I3I4one2one
		{
			get
			{
				return (I4) Strategy.GetCompositeRole(Meta.I3I4one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I3I4one2one.RelationType, value);
			}
		}

		virtual public bool ExistI3I4one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I3I4one2one.RelationType);
			}
		}

		virtual public void RemoveI3I4one2one()
		{
			Strategy.RemoveCompositeRole(Meta.I3I4one2one.RelationType);
		}


		virtual public C4 I3C4many2one
		{
			get
			{
				return (C4) Strategy.GetCompositeRole(Meta.I3C4many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.I3C4many2one.RelationType, value);
			}
		}

		virtual public bool ExistI3C4many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.I3C4many2one.RelationType);
			}
		}

		virtual public void RemoveI3C4many2one()
		{
			Strategy.RemoveCompositeRole(Meta.I3C4many2one.RelationType);
		}


		virtual public global::System.String I3StringEquals
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I3StringEquals.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I3StringEquals.RelationType, value);
			}
		}

		virtual public bool ExistI3StringEquals{
			get
			{
				return Strategy.ExistUnitRole(Meta.I3StringEquals.RelationType);
			}
		}

		virtual public void RemoveI3StringEquals()
		{
			Strategy.RemoveUnitRole(Meta.I3StringEquals.RelationType);
		}


		virtual public C1 C1one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeRole(Meta.C1one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.C1one2one.RelationType, value);
			}
		}

		virtual public bool ExistC1one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.C1one2one.RelationType);
			}
		}

		virtual public void RemoveC1one2one()
		{
			Strategy.RemoveCompositeRole(Meta.C1one2one.RelationType);
		}


		virtual public global::System.String Name
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.Name.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.Name.RelationType, value);
			}
		}

		virtual public bool ExistName{
			get
			{
				return Strategy.ExistUnitRole(Meta.Name.RelationType);
			}
		}

		virtual public void RemoveName()
		{
			Strategy.RemoveUnitRole(Meta.Name.RelationType);
		}


		virtual public global::System.Double? S1234AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.S1234AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDouble.RelationType);
		}


		virtual public global::System.Decimal? S1234AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.S1234AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDecimal.RelationType);
		}


		virtual public global::System.Int32? S1234AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.S1234AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsInteger.RelationType);
		}


		virtual public S1234 S1234many2one
		{
			get
			{
				return (S1234) Strategy.GetCompositeRole(Meta.S1234many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234many2one.RelationType, value);
			}
		}

		virtual public bool ExistS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234many2one.RelationType);
			}
		}

		virtual public void RemoveS1234many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234many2one.RelationType);
		}


		virtual public C2 S1234C2one2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S1234C2one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234C2one2one.RelationType, value);
			}
		}

		virtual public bool ExistS1234C2one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234C2one2one.RelationType);
			}
		}

		virtual public void RemoveS1234C2one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2one2one.RelationType);
		}


		virtual public global::Allors.Extent<C2> S1234C2many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234C2many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234C2many2manies.RelationType, value);
			}
		}

		virtual public void AddS1234C2many2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S1234C2many2manies.RelationType, value);
		}

		virtual public void RemoveS1234C2many2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2many2manies.RelationType, value);
		}

		virtual public bool ExistS1234C2many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234C2many2manies.RelationType);
			}
		}

		virtual public void RemoveS1234C2many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234C2many2manies.RelationType);
		}


		virtual public global::Allors.Extent<S1234> S1234one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234one2manies.RelationType, value);
			}
		}

		virtual public void AddS1234one2many (S1234 value)
		{
			Strategy.AddCompositeRole(Meta.S1234one2manies.RelationType, value);
		}

		virtual public void RemoveS1234one2many (S1234 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234one2manies.RelationType, value);
		}

		virtual public bool ExistS1234one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234one2manies.RelationType);
			}
		}

		virtual public void RemoveS1234one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234one2manies.RelationType);
		}


		virtual public global::Allors.Extent<C2> S1234C2one2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234C2one2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234C2one2manies.RelationType, value);
			}
		}

		virtual public void AddS1234C2one2many (C2 value)
		{
			Strategy.AddCompositeRole(Meta.S1234C2one2manies.RelationType, value);
		}

		virtual public void RemoveS1234C2one2many (C2 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2one2manies.RelationType, value);
		}

		virtual public bool ExistS1234C2one2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234C2one2manies.RelationType);
			}
		}

		virtual public void RemoveS1234C2one2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234C2one2manies.RelationType);
		}


		virtual public global::Allors.Extent<S1234> S1234many2manies
		{
			get
			{
				return Strategy.GetCompositeRoles(Meta.S1234many2manies.RelationType);
			}
			set
			{
				Strategy.SetCompositeRoles(Meta.S1234many2manies.RelationType, value);
			}
		}

		virtual public void AddS1234many2many (S1234 value)
		{
			Strategy.AddCompositeRole(Meta.S1234many2manies.RelationType, value);
		}

		virtual public void RemoveS1234many2many (S1234 value)
		{
			Strategy.RemoveCompositeRole(Meta.S1234many2manies.RelationType, value);
		}

		virtual public bool ExistS1234many2manies
		{
			get
			{
				return Strategy.ExistCompositeRoles(Meta.S1234many2manies.RelationType);
			}
		}

		virtual public void RemoveS1234many2manies()
		{
			Strategy.RemoveCompositeRoles(Meta.S1234many2manies.RelationType);
		}


		virtual public global::System.String ClassName
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.ClassName.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.ClassName.RelationType, value);
			}
		}

		virtual public bool ExistClassName{
			get
			{
				return Strategy.ExistUnitRole(Meta.ClassName.RelationType);
			}
		}

		virtual public void RemoveClassName()
		{
			Strategy.RemoveUnitRole(Meta.ClassName.RelationType);
		}


		virtual public global::System.DateTime? S1234AllorsDateTime
		{
			get
			{
				return (global::System.DateTime?) Strategy.GetUnitRole(Meta.S1234AllorsDateTime.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsDateTime.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsDateTime{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsDateTime.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsDateTime()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsDateTime.RelationType);
		}


		virtual public S1234 S1234one2one
		{
			get
			{
				return (S1234) Strategy.GetCompositeRole(Meta.S1234one2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234one2one.RelationType, value);
			}
		}

		virtual public bool ExistS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234one2one.RelationType);
			}
		}

		virtual public void RemoveS1234one2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234one2one.RelationType);
		}


		virtual public C2 S1234C2many2one
		{
			get
			{
				return (C2) Strategy.GetCompositeRole(Meta.S1234C2many2one.RelationType);
			}
			set
			{
				Strategy.SetCompositeRole(Meta.S1234C2many2one.RelationType, value);
			}
		}

		virtual public bool ExistS1234C2many2one
		{
			get
			{
				return Strategy.ExistCompositeRole(Meta.S1234C2many2one.RelationType);
			}
		}

		virtual public void RemoveS1234C2many2one()
		{
			Strategy.RemoveCompositeRole(Meta.S1234C2many2one.RelationType);
		}


		virtual public global::System.String S1234AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.S1234AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsString.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsString.RelationType);
		}


		virtual public global::System.Boolean? S1234AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.S1234AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.S1234AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistS1234AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.S1234AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveS1234AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.S1234AllorsBoolean.RelationType);
		}


		virtual public global::System.String I23AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I23AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I23AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistI23AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I23AllorsString.RelationType);
			}
		}

		virtual public void RemoveI23AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I23AllorsString.RelationType);
		}


		virtual public global::System.Decimal? I34AllorsDecimal
		{
			get
			{
				return (global::System.Decimal?) Strategy.GetUnitRole(Meta.I34AllorsDecimal.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I34AllorsDecimal.RelationType, value);
			}
		}

		virtual public bool ExistI34AllorsDecimal{
			get
			{
				return Strategy.ExistUnitRole(Meta.I34AllorsDecimal.RelationType);
			}
		}

		virtual public void RemoveI34AllorsDecimal()
		{
			Strategy.RemoveUnitRole(Meta.I34AllorsDecimal.RelationType);
		}


		virtual public global::System.Boolean? I34AllorsBoolean
		{
			get
			{
				return (global::System.Boolean?) Strategy.GetUnitRole(Meta.I34AllorsBoolean.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I34AllorsBoolean.RelationType, value);
			}
		}

		virtual public bool ExistI34AllorsBoolean{
			get
			{
				return Strategy.ExistUnitRole(Meta.I34AllorsBoolean.RelationType);
			}
		}

		virtual public void RemoveI34AllorsBoolean()
		{
			Strategy.RemoveUnitRole(Meta.I34AllorsBoolean.RelationType);
		}


		virtual public global::System.Double? I34AllorsDouble
		{
			get
			{
				return (global::System.Double?) Strategy.GetUnitRole(Meta.I34AllorsDouble.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I34AllorsDouble.RelationType, value);
			}
		}

		virtual public bool ExistI34AllorsDouble{
			get
			{
				return Strategy.ExistUnitRole(Meta.I34AllorsDouble.RelationType);
			}
		}

		virtual public void RemoveI34AllorsDouble()
		{
			Strategy.RemoveUnitRole(Meta.I34AllorsDouble.RelationType);
		}


		virtual public global::System.Int32? I34AllorsInteger
		{
			get
			{
				return (global::System.Int32?) Strategy.GetUnitRole(Meta.I34AllorsInteger.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I34AllorsInteger.RelationType, value);
			}
		}

		virtual public bool ExistI34AllorsInteger{
			get
			{
				return Strategy.ExistUnitRole(Meta.I34AllorsInteger.RelationType);
			}
		}

		virtual public void RemoveI34AllorsInteger()
		{
			Strategy.RemoveUnitRole(Meta.I34AllorsInteger.RelationType);
		}


		virtual public global::System.String I34AllorsString
		{
			get
			{
				return (global::System.String) Strategy.GetUnitRole(Meta.I34AllorsString.RelationType);
			}
			set
			{
				Strategy.SetUnitRole(Meta.I34AllorsString.RelationType, value);
			}
		}

		virtual public bool ExistI34AllorsString{
			get
			{
				return Strategy.ExistUnitRole(Meta.I34AllorsString.RelationType);
			}
		}

		virtual public void RemoveI34AllorsString()
		{
			Strategy.RemoveUnitRole(Meta.I34AllorsString.RelationType);
		}



		virtual public C1 C1WhereC1C3one2one
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1C3one2one.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1C3one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1C3one2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC1C3many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC1C3many2many.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC1C3many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC1C3many2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C1> C1sWhereC3may2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C1sWhereC3may2one.RelationType);
			}
		}

		virtual public bool ExistC1sWhereC3may2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C1sWhereC3may2one.RelationType);
			}
		}


		virtual public C1 C1WhereC1C3one2many
		{
			get
			{
				return (C1) Strategy.GetCompositeAssociation(Meta.C1WhereC1C3one2many.RelationType);
			}
		}

		virtual public bool ExistC1WhereC1C3one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.C1WhereC1C3one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereC3Many2Many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereC3Many2Many.RelationType);
			}
		}

		virtual public bool ExistC2sWhereC3Many2Many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereC3Many2Many.RelationType);
			}
		}


		virtual public global::Allors.Extent<C2> C2sWhereC3Many2One
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.C2sWhereC3Many2One.RelationType);
			}
		}

		virtual public bool ExistC2sWhereC3Many2One
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.C2sWhereC3Many2One.RelationType);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereC3many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereC3many2one.RelationType);
			}
		}

		virtual public bool ExistI12sWhereC3many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereC3many2one.RelationType);
			}
		}


		virtual public I12 I12WhereI12C3one2one
		{
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereI12C3one2one.RelationType);
			}
		}

		virtual public bool ExistI12WhereI12C3one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereI12C3one2one.RelationType);
			}
		}


		virtual public I12 I12WhereI12C3one2many
		{
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereI12C3one2many.RelationType);
			}
		}

		virtual public bool ExistI12WhereI12C3one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereI12C3one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereI12C3many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereI12C3many2many.RelationType);
			}
		}

		virtual public bool ExistI12sWhereI12C3many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereI12C3many2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereS1234many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereS1234many2one.RelationType);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereS1234many2one.RelationType);
			}
		}


		virtual public S1234 S1234WhereS1234one2many
		{
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereS1234one2many.RelationType);
			}
		}

		virtual public bool ExistS1234WhereS1234one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereS1234one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<S1234> S1234sWhereS1234many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.S1234sWhereS1234many2many.RelationType);
			}
		}

		virtual public bool ExistS1234sWhereS1234many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.S1234sWhereS1234many2many.RelationType);
			}
		}


		virtual public S1234 S1234WhereS1234one2one
		{
			get
			{
				return (S1234) Strategy.GetCompositeAssociation(Meta.S1234WhereS1234one2one.RelationType);
			}
		}

		virtual public bool ExistS1234WhereS1234one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.S1234WhereS1234one2one.RelationType);
			}
		}


		virtual public I1 I1WhereI1I34one2many
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1I34one2many.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1I34one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1I34one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1I34many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1I34many2one.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1I34many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1I34many2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<I1> I1sWhereI1I34many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I1sWhereI1I34many2many.RelationType);
			}
		}

		virtual public bool ExistI1sWhereI1I34many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I1sWhereI1I34many2many.RelationType);
			}
		}


		virtual public I1 I1WhereI1I34one2one
		{
			get
			{
				return (I1) Strategy.GetCompositeAssociation(Meta.I1WhereI1I34one2one.RelationType);
			}
		}

		virtual public bool ExistI1WhereI1I34one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I1WhereI1I34one2one.RelationType);
			}
		}


		virtual public I12 I12WhereI12I34one2many
		{
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereI12I34one2many.RelationType);
			}
		}

		virtual public bool ExistI12WhereI12I34one2many
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereI12I34one2many.RelationType);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereI12I34many2one
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereI12I34many2one.RelationType);
			}
		}

		virtual public bool ExistI12sWhereI12I34many2one
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereI12I34many2one.RelationType);
			}
		}


		virtual public global::Allors.Extent<I12> I12sWhereI12I34many2many
		{
			get
			{
				return Strategy.GetCompositeAssociations(Meta.I12sWhereI12I34many2many.RelationType);
			}
		}

		virtual public bool ExistI12sWhereI12I34many2many
		{
			get
			{
				return Strategy.ExistCompositeAssociations(Meta.I12sWhereI12I34many2many.RelationType);
			}
		}


		virtual public I12 I12WhereI12I34one2one
		{
			get
			{
				return (I12) Strategy.GetCompositeAssociation(Meta.I12WhereI12I34one2one.RelationType);
			}
		}

		virtual public bool ExistI12WhereI12I34one2one
		{
			get
			{
				return Strategy.ExistCompositeAssociation(Meta.I12WhereI12I34one2one.RelationType);
			}
		}


        #region Test Helpers
        public static C3 Create(ISession session) => (C3)session.Create(session.Database.State().M.C3.ObjectType);

        public static C3[] Create(ISession session, int count) => (C3[])session.Create(session.Database.State().M.C3.ObjectType, count);

        public static C3 Instantiate(ISession session, long id) => (C3)session.Instantiate(id);

        public static C3[] Instantiate(ISession session, string[] ids) => (C3[])session.Instantiate(ids);

        public static C3[] Extent(ISession session) => (C3[])session.Extent(session.Database.State().M.C3.ObjectType).ToArray();
        #endregion
	}
}